<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:actormapping="http://www.bonitasoft.org/ns/actormapping/6.0" xmlns:configuration="http://www.bonitasoft.org/ns/studio/configuration" xmlns:connectorconfiguration="http://wwww.bonitasoft.org/model/connector/configuration" xmlns:decision="http://www.bonitasoft.org/ns/studio/process/decision" xmlns:definition="http://www.bonitasoft.org/ns/connector/definition/6.1" xmlns:expression="http://www.bonitasoft.org/ns/studio/expression" xmlns:notation="http://www.eclipse.org/gmf/runtime/1.0.2/notation" xmlns:parameter="http://www.bonitasoft.org/ns/studio/parameter" xmlns:process="http://www.bonitasoft.org/ns/studio/process" xsi:schemaLocation="http://www.bonitasoft.org/ns/studio/process/decision http://www.bonitasoft.org/ns/studio/process#//decision">
  <process:MainProcess xmi:id="_MBHDcBngEemBtMMqTz0rcw" name="Safety Management Team" version="0116" author="Pierre-Yves" bonitaVersion="7.7.4" bonitaModelVersion="7.6.0-002" configId="ACED0005740026536166657479204D616E6167656D656E74205465616D372E362E302D303032372E372E347370">
    <elements xmi:type="process:Pool" xmi:id="_MBHDcRngEemBtMMqTz0rcw" name="SmtMeeting" welcomePageInternal="false" basedOnLookAndFeel="Default Application">
      <elements xmi:type="process:Lane" xmi:id="_MBHDchngEemBtMMqTz0rcw" name="LSP" actor="_MBHFChngEemBtMMqTz0rcw">
        <elements xmi:type="process:StartEvent" xmi:id="_MBHDcxngEemBtMMqTz0rcw" name="Start1" outgoing="_MBHE8BngEemBtMMqTz0rcw">
          <viewPageFlowRedirectionURL xmi:type="expression:Expression" xmi:id="_MBHDdBngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_MBHDdRngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_MBHDdhngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_MBHDdxngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:Task" xmi:id="_MBHDeBngEemBtMMqTz0rcw" name="Preparation" outgoing="_MBHE4BngEemBtMMqTz0rcw" incoming="_MBHE4xngEemBtMMqTz0rcw" overrideActorsOfTheLane="false">
          <viewPageFlowRedirectionURL xmi:type="expression:Expression" xmi:id="_MBHDeRngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_MBHDehngEemBtMMqTz0rcw" name="displayName()" content="import java.text.SimpleDateFormat&#xD;&#xA;import java.time.format.DateTimeFormatter&#xD;&#xA;&#xD;&#xA;import com.company.model.SmtMeetingThTo&#xD;&#xA;&#xD;&#xA;String display=&quot;Prepare &quot;;&#xD;&#xA;&#xD;&#xA;if (smtMeeting.getDate_of_meeting()!=null)&#xD;&#xA;&#x9;display += smtMeeting.getDate_of_meeting().format(DateTimeFormatter.ofPattern(&quot;YYYY MMM dd&quot;))+&quot; &quot;;&#xD;&#xA;&#xD;&#xA;for (int i=0;i&lt;smtMeeting.getMeeting_th_to().size();i++ )&#xD;&#xA;{&#xD;&#xA;&#x9;SmtMeetingThTo meetingThTo = smtMeeting.getMeeting_th_to().get( i );&#xD;&#xA;&#x9;if (meetingThTo.getTherapy()==null)&#xD;&#xA;&#x9;&#x9;continue; // protection&#xD;&#xA;&#x9;if (i>0)&#xD;&#xA;&#x9;&#x9;display+=&quot;, &quot;;&#xD;&#xA;&#x9;display+= meetingThTo.getTherapy().getName();&#xD;&#xA;}&#xD;&#xA;// Bonita is not protected againts too big display, we have to do its jobs&#xD;&#xA;if (display.length()>255)&#xD;&#xA;&#x9;display = display.substring(0,255);&#xD;&#xA;&#xD;&#xA;return display;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
            <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_MBHDexngEemBtMMqTz0rcw" name="smtMeeting" dataType="_MBHGdBngEemBtMMqTz0rcw" className="com.company.model.SmtMeeting"/>
          </dynamicLabel>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_MBHDfBngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_MBHDfRngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <data xmi:type="process:Data" xmi:id="_MBHDfhngEemBtMMqTz0rcw" name="taskCode" dataType="_MBHGcRngEemBtMMqTz0rcw">
            <defaultValue xmi:type="expression:Expression" xmi:id="_MBHDfxngEemBtMMqTz0rcw" name="PREPARATION" content="PREPARATION"/>
          </data>
          <operations xmi:type="expression:Operation" xmi:id="_MBHDgBngEemBtMMqTz0rcw">
            <leftOperand xmi:type="expression:Expression" xmi:id="_MBHDgRngEemBtMMqTz0rcw" name="smtMeeting" content="smtMeeting" type="TYPE_VARIABLE" returnType="com.company.model.SmtMeeting">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_MBHDghngEemBtMMqTz0rcw" name="smtMeeting" dataType="_MBHGdBngEemBtMMqTz0rcw" className="com.company.model.SmtMeeting"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_MBHDgxngEemBtMMqTz0rcw" name="smtMeeting" content="import java.util.logging.Logger&#xD;&#xA;&#xD;&#xA;import org.bonitasoft.engine.identity.User&#xD;&#xA;&#xD;&#xA;import com.company.model.SafetyTopic&#xD;&#xA;import com.company.model.SafetyTopicDAO&#xD;&#xA;import com.company.model.SmtMeetingThTo&#xD;&#xA;import com.company.model.SmtMeetingTopic&#xD;&#xA;import com.company.model.SmtMember&#xD;&#xA;import com.company.model.Therapy&#xD;&#xA;&#xD;&#xA;Logger logger = Logger.getLogger(&quot;org.bonitasoft.com&quot;);&#xD;&#xA;&#xD;&#xA;logger.info(&quot;Start save smtMeeting&quot;);&#xD;&#xA;&#xD;&#xA;def smtMeetingVar = new com.company.model.SmtMeeting()&#xD;&#xA;smtMeetingVar.date_of_meeting = smtMeetingInput.date_of_meeting&#xD;&#xA;smtMeetingVar.meeting_members = new ArrayList();&#xD;&#xA;&#xD;&#xA;// register members&#xD;&#xA;for (def smtMemberInput : smtMeetingInput.meeting_members)&#xD;&#xA;{&#xD;&#xA;&#x9;logger.info(&quot;Member isPresent ? &quot;+smtMemberInput.is_present+&quot; Input=&quot;+smtMemberInput.toString());&#xD;&#xA;&#x9;if (! smtMemberInput.is_present)&#xD;&#xA;&#x9;&#x9;continue;&#xD;&#xA;&#x9;SmtMember newMember=null;&#xD;&#xA;&#x9;if (smtMemberInput.persistenceId == -1)&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;logger.info(&quot;new Member [&quot;+smtMemberInput.name+&quot;]&quot;);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;newMember = smtMemberDAO.newInstance( smtMemberInput.name );&#xD;&#xA;&#x9;&#x9;newMember.email = smtMemberInput.email;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;logger.info(&quot;existing Memeber [&quot;+smtMemberInput.persistenceId+&quot;]&quot;);&#xD;&#xA;&#x9;&#x9;newMember = smtMemberDAO.findByPersistenceId(smtMemberInput.persistenceId.toLong())&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;// search the job title of the person&#xD;&#xA;&#x9;newMember.role_member = smtMemberInput.role_member;&#xD;&#xA;&#x9;try&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;User user = apiAccessor.getIdentityAPI().getUserByUserName(smtMemberInput.name);&#xD;&#xA;&#x9;&#x9;newMember.role_member = user.getJobTitle();&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;catch(Exception e)&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;logger.info(&quot;User [&quot;+smtMemberInput.name+&quot;] not found, can't get its role&quot;);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;smtMeetingVar.meeting_members.add( newMember );&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;// register therapy&#xD;&#xA;smtMeetingVar.meeting_th_to = new ArrayList();&#xD;&#xA;&#xD;&#xA;for (def meetingThToInput : smtMeetingInput.meeting_th_to)&#xD;&#xA;{&#xD;&#xA;&#x9;logger.info(&quot;meetingThTo persistenceId[&quot;+meetingThToInput.persistenceId+&quot;] Input=&quot;+meetingThToInput);&#xD;&#xA;&#x9;SmtMeetingThTo smtMeetingThTo=null;&#xD;&#xA;&#x9;if (meetingThToInput.persistenceId !=null)&#xD;&#xA;&#x9;&#x9;smtMeetingThTo = smtMeetingThToDAO.findByPersistenceId(meetingThToInput.persistenceId.toLong())&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;smtMeetingThTo  = smtMeetingThToDAO.newInstance();&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;// associate the therapy to this line&#xD;&#xA;&#x9;Therapy therapy=null;&#xD;&#xA;&#x9;if (meetingThToInput.therapy !=null &amp;&amp; meetingThToInput.therapy.persistenceId !=null)&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;therapy = therapyDAO.findByPersistenceId(meetingThToInput.therapy.persistenceId);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;smtMeetingThTo.setTherapy(therapy);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// set up now all the topics&#xD;&#xA;&#x9;List listCurrentTopics = smtMeetingThTo.topics_meeting;&#xD;&#xA;&#x9;if (listCurrentTopics == null)&#xD;&#xA;&#x9;&#x9;listCurrentTopics= [];&#xD;&#xA;&#x9;for (def topicInput : meetingThToInput.topics_meeting)&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;logger.info(&quot;meetingThTo Check Topics=&quot;+topicInput.persistenceId+&quot; [&quot;+topicInput.name+&quot;]&quot;);&#xD;&#xA;&#x9;&#x9;SmtMeetingTopic smtTopic;&#xD;&#xA;&#x9;&#x9;if (topicInput.persistenceId !=null)&#xD;&#xA;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;// already exist, must be in the listCurrentTopics&#xD;&#xA;&#x9;&#x9;&#x9;for (int j=0;j&lt;listCurrentTopics.size();j++)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (listCurrentTopics[ j ].persistenceId == topicInput.persistenceId )&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;smtTopic = listCurrentTopics[ j ];&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;// create a new one&#xD;&#xA;&#x9;&#x9;if (smtTopic==null)&#xD;&#xA;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;logger.info(&quot;meetingThTo Create new smtMeetingTopics=&quot;+topicInput);&#xD;&#xA;&#x9;&#x9;&#x9;smtTopic = new SmtMeetingTopic()&#xD;&#xA;&#x9;&#x9;&#x9;logger.info(&quot;meetingThTo Create Reference safetyTopicPersistenceId =&quot;+topicInput.safety_topic.persistenceId);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;def safetyTopicLoaded = safetyTopicDAO.findByPersistenceId( (long) topicInput.safety_topic.persistenceId );&#xD;&#xA;&#x9;&#x9;&#x9;smtTopic.safety_topic = safetyTopicLoaded;&#xD;&#xA;&#x9;&#x9;&#x9;listCurrentTopics.add( smtTopic);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;logger.info(&quot;meetingThTo Found existing in the list &quot;+smtTopic);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;smtTopic.selected =topicInput.selected;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;smtMeetingThTo.topics_meeting=listCurrentTopics;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;smtMeetingVar.meeting_th_to.add( smtMeetingThTo );&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;// fullfill the chairperson&#xD;&#xA;logger.info(&quot;ChairpersonInput =[&quot;+smtMeetingInput.chairperson+&quot;]&quot;);&#xD;&#xA;if (smtMeetingInput.chairperson != null &amp;&amp; smtMeetingInput.chairperson.trim().length()>0)&#xD;&#xA;{&#xD;&#xA;&#x9;logger.info(&quot;Chairperson set it to [&quot;+smtMeetingInput.chairperson+&quot;]&quot;);&#xD;&#xA;&#x9;&#x9;smtMeetingVar.setChairperson( smtMeetingInput.chairperson );&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;}&#xD;&#xA;if (smtMeetingVar.getChairperson() == null || smtMeetingVar.getChairperson().trim().length()==0)&#xD;&#xA;{&#xD;&#xA;&#x9;long idInitiator = apiAccessor.getProcessAPI().getProcessInstance(rootProcessInstanceId).getStartedBy();&#xD;&#xA;&#x9;User user = apiAccessor.getIdentityAPI().getUser(idInitiator );&#xD;&#xA;&#x9;smtMeetingVar.setChairperson( user.getFirstName() + &quot; &quot;+user.getLastName());&#xD;&#xA;&#x9;logger.info(&quot;Chairperson is empty, default value is [&quot;+smtMeetingVar.getChairperson()+&quot;]&quot;);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;logger.info(&quot;End of SmtMeeting initialisation - saved &quot;+smtMeetingVar.meeting_th_to.size()+&quot; thto&quot;);&#xD;&#xA;&#xD;&#xA;return smtMeetingVar" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="com.company.model.SmtMeeting">
              <referencedElements xmi:type="expression:Expression" xmi:id="_MBHDhBngEemBtMMqTz0rcw" name="therapyDAO" content="therapyDAO" type="TYPE_BUSINESS_OBJECT_DAO" returnType="com.company.model.TherapyDAO" returnTypeFixed="true"/>
              <referencedElements xmi:type="process:ContractInput" xmi:id="_MBHDhRngEemBtMMqTz0rcw" name="smtMeetingInput" type="COMPLEX"/>
              <referencedElements xmi:type="expression:Expression" xmi:id="_MBHDhhngEemBtMMqTz0rcw" name="safetyTopicDAO" content="safetyTopicDAO" type="TYPE_BUSINESS_OBJECT_DAO" returnType="com.company.model.SafetyTopicDAO" returnTypeFixed="true"/>
              <referencedElements xmi:type="expression:Expression" xmi:id="_MBHDhxngEemBtMMqTz0rcw" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
              <referencedElements xmi:type="expression:Expression" xmi:id="_MBHDiBngEemBtMMqTz0rcw" name="smtMemberDAO" content="smtMemberDAO" type="TYPE_BUSINESS_OBJECT_DAO" returnType="com.company.model.SmtMemberDAO" returnTypeFixed="true"/>
              <referencedElements xmi:type="expression:Expression" xmi:id="_MBHDiRngEemBtMMqTz0rcw" name="smtMeetingThToDAO" content="smtMeetingThToDAO" type="TYPE_BUSINESS_OBJECT_DAO" returnType="com.company.model.SmtMeetingThToDAO" returnTypeFixed="true"/>
              <referencedElements xmi:type="expression:Expression" xmi:id="_MBHDihngEemBtMMqTz0rcw" name="rootProcessInstanceId" content="rootProcessInstanceId" type="TYPE_ENGINE_CONSTANT" returnType="java.lang.Long"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_MBHDixngEemBtMMqTz0rcw" type="ASSIGNMENT" expression="setDateOfMeeting">
              <inputTypes>java.time.OffsetDateTime</inputTypes>
            </operator>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_MBHDjBngEemBtMMqTz0rcw">
            <leftOperand xmi:type="expression:Expression" xmi:id="_MBHDjRngEemBtMMqTz0rcw" name="decision" content="decision" type="TYPE_VARIABLE">
              <referencedElements xmi:type="process:Data" xmi:id="_MBHDjhngEemBtMMqTz0rcw" name="decision" dataType="_MBHGcRngEemBtMMqTz0rcw"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_MBHDjxngEemBtMMqTz0rcw" name="decisionInput" content="decisionInput" type="TYPE_CONTRACT_INPUT">
              <referencedElements xmi:type="process:ContractInput" xmi:id="_MBHDkBngEemBtMMqTz0rcw" name="decisionInput">
                <mapping xmi:type="process:ContractInputMapping" xmi:id="_MBHDkRngEemBtMMqTz0rcw"/>
              </referencedElements>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_MBHDkhngEemBtMMqTz0rcw" type="ASSIGNMENT" expression="setMeetingThTo">
              <inputTypes>java.util.List</inputTypes>
            </operator>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_MBHDkxngEemBtMMqTz0rcw">
            <leftOperand xmi:type="expression:Expression" xmi:id="_MBHDlBngEemBtMMqTz0rcw" name="preparationDocuments" content="preparationDocuments" type="DOCUMENT_REF_TYPE" returnType="java.util.List">
              <referencedElements xmi:type="process:Document" xmi:id="_MBHDlRngEemBtMMqTz0rcw" name="preparationDocuments" multiple="true"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_MBHDlhngEemBtMMqTz0rcw" name="getDocuments" content="&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;import java.util.logging.Logger;&#xD;&#xA;&#xD;&#xA;import org.bonitasoft.engine.bpm.document.DocumentValue&#xD;&#xA;&#xD;&#xA;List&lt;DocumentValue> listResult= new ArrayList&lt;DocumentValue>();&#xD;&#xA; &#xD;&#xA;Logger logger = Logger.getLogger(&quot;org.bonitasoft&quot;);&#xD;&#xA;&#xD;&#xA;for (int i=0; i&lt;preparationDocumentsInput.size();i++)&#xD;&#xA;{&#xD;&#xA;&#x9;if (preparationDocumentsInput.get( i )== null) {&#xD;&#xA;&#x9;&#x9; continue; // should never arrive&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;if (preparationDocumentsInput.get( i ).get(&quot;setdoc&quot;) !=null)&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;def newFileDocumentInput = preparationDocumentsInput.get( i ).get(&quot;setdoc&quot;)&#xD;&#xA;&#x9;&#x9;// we have a new content&#xD;&#xA;&#x9;&#x9;logger.info(&quot;preparationDocument: Line [&quot;+i+&quot;] getFileName[&quot;+newFileDocumentInput.getFileName()+&quot;] class [&quot;+newFileDocumentInput.getClass().getName()+&quot;]&quot;)&#xD;&#xA;&#x9;&#x9;listResult.add( new DocumentValue( newFileDocumentInput.getContent(), newFileDocumentInput.getContentType(), newFileDocumentInput.getFileName()));&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} else if (preparationDocumentsInput.get( i ).get(&quot;src&quot;) !=null)&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;if (preparationDocumentsInput.get( i ).get(&quot;src&quot;).get(&quot;id&quot;) !=null)&#xD;&#xA;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;// we want to keep the current document in this position&#xD;&#xA;&#x9;&#x9;&#x9;logger.info(&quot;preparationDocument: Line [&quot;+i+&quot;] Keep Document [&quot;+preparationDocumentsInput.get( i ).get(&quot;src&quot;).get(&quot;id&quot;)+&quot;]&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;listResult.add( new DocumentValue( preparationDocumentsInput.get( i ).get(&quot;src&quot;).get(&quot;id&quot;) ) );&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;else if (preparationDocumentsInput.get( i ).get(&quot;src&quot;).get(&quot;url&quot;) !=null)&#xD;&#xA;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;logger.info(&quot;preparationDocument: Line [&quot;+i+&quot;] Url Document [&quot;+preparationDocumentsInput.get( i ).get(&quot;url&quot;)+&quot;]&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;listResult.add( new DocumentValue( (String) preparationDocumentsInput.get( i ).get(&quot;src&quot;).get(&quot;url&quot;) ));&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;{ &#x9;&#x9;&#x9;// user give an empty line, just ignore it&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;// user give an empty line, just ignore it&#xD;&#xA;&#x9;}&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return listResult;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List">
              <referencedElements xmi:type="process:ContractInput" xmi:id="_MBHDlxngEemBtMMqTz0rcw" name="preparationDocumentsInput" type="COMPLEX" multiple="true">
                <mapping xmi:type="process:ContractInputMapping" xmi:id="_MBHDmBngEemBtMMqTz0rcw"/>
              </referencedElements>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_MBHDmRngEemBtMMqTz0rcw" type="DOCUMENT_LIST_SET"/>
          </operations>
          <loopCondition xmi:type="expression:Expression" xmi:id="_MBHDmhngEemBtMMqTz0rcw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_MBHDmxngEemBtMMqTz0rcw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_MBHDnBngEemBtMMqTz0rcw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_MBHDnRngEemBtMMqTz0rcw" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_MBHDnhngEemBtMMqTz0rcw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <entryRedirectionURL xmi:type="expression:Expression" xmi:id="_MBHDnxngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <confirmationMessage xmi:type="expression:Expression" xmi:id="_MBHDoBngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <formMapping xmi:type="process:FormMapping" xmi:id="_MBHDoRngEemBtMMqTz0rcw">
            <targetForm xmi:type="expression:Expression" xmi:id="_MBHDohngEemBtMMqTz0rcw" name="SmtMeeting" content="929acb98-6c2c-4b25-95ae-9dc67693a1a3" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
          </formMapping>
          <contract xmi:type="process:Contract" xmi:id="_MBHDoxngEemBtMMqTz0rcw">
            <inputs xmi:type="process:ContractInput" xmi:id="_MBHDpBngEemBtMMqTz0rcw" name="smtMeetingInput" type="COMPLEX">
              <inputs xmi:type="process:ContractInput" xmi:id="_MBHDpRngEemBtMMqTz0rcw" name="date_of_meeting" type="OFFSETDATETIME"/>
              <inputs xmi:type="process:ContractInput" xmi:id="_MBHDphngEemBtMMqTz0rcw" name="meeting_members" type="COMPLEX" multiple="true">
                <inputs xmi:type="process:ContractInput" xmi:id="_MBHDpxngEemBtMMqTz0rcw" name="persistenceId" type="INTEGER"/>
                <inputs xmi:type="process:ContractInput" xmi:id="_MBHDqBngEemBtMMqTz0rcw" name="name"/>
                <inputs xmi:type="process:ContractInput" xmi:id="_MBHDqRngEemBtMMqTz0rcw" name="email"/>
                <inputs xmi:type="process:ContractInput" xmi:id="_MBHDqhngEemBtMMqTz0rcw" name="is_present" type="BOOLEAN">
                  <mapping xmi:type="process:ContractInputMapping" xmi:id="_MBHDqxngEemBtMMqTz0rcw"/>
                </inputs>
              </inputs>
              <inputs xmi:type="process:ContractInput" xmi:id="_MBHDrBngEemBtMMqTz0rcw" name="agenda"/>
              <inputs xmi:type="process:ContractInput" xmi:id="_MBHDrRngEemBtMMqTz0rcw" name="meeting_th_to" type="COMPLEX" multiple="true">
                <inputs xmi:type="process:ContractInput" xmi:id="_MBHDrhngEemBtMMqTz0rcw" name="persistenceId" type="INTEGER"/>
              </inputs>
            </inputs>
            <inputs xmi:type="process:ContractInput" xmi:id="_MBHDrxngEemBtMMqTz0rcw" name="decisionInput">
              <mapping xmi:type="process:ContractInputMapping" xmi:id="_MBHDsBngEemBtMMqTz0rcw"/>
            </inputs>
            <inputs xmi:type="process:ContractInput" xmi:id="_MBHDsRngEemBtMMqTz0rcw" name="preparationDocumentsInput" type="COMPLEX" multiple="true">
              <mapping xmi:type="process:ContractInputMapping" xmi:id="_MBHDshngEemBtMMqTz0rcw"/>
              <inputs xmi:type="process:ContractInput" xmi:id="_MBHDsxngEemBtMMqTz0rcw" name="setdoc" type="FILE">
                <mapping xmi:type="process:ContractInputMapping" xmi:id="_MBHDtBngEemBtMMqTz0rcw"/>
              </inputs>
            </inputs>
          </contract>
          <expectedDuration xmi:type="expression:Expression" xmi:id="_MBHDtRngEemBtMMqTz0rcw" name="" content="" returnType="java.lang.Long" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:XORGateway" xmi:id="_MBHDthngEemBtMMqTz0rcw" name="Decision" outgoing="_MBHE4xngEemBtMMqTz0rcw _MBHE5hngEemBtMMqTz0rcw" incoming="_MBHE-hngEemBtMMqTz0rcw" exclusiveOutgoingTransition="true">
          <viewPageFlowRedirectionURL xmi:type="expression:Expression" xmi:id="_MBHDtxngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_MBHDuBngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_MBHDuRngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_MBHDuhngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:Task" xmi:id="_MBHDuxngEemBtMMqTz0rcw" name="Conclusion" outgoing="_MBHE6hngEemBtMMqTz0rcw" incoming="_MBHE5hngEemBtMMqTz0rcw" overrideActorsOfTheLane="false">
          <viewPageFlowRedirectionURL xmi:type="expression:Expression" xmi:id="_MBHDvBngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_MBHDvRngEemBtMMqTz0rcw" name="displayName()" content="import java.text.SimpleDateFormat&#xD;&#xA;import java.time.format.DateTimeFormatter&#xD;&#xA;&#xD;&#xA;import com.company.model.SmtMeetingThTo&#xD;&#xA;&#xD;&#xA;String display=&quot;Conclusion &quot;;&#xD;&#xA;&#xD;&#xA;if (smtMeeting.getDate_of_meeting()!=null)&#xD;&#xA;&#x9;display += smtMeeting.getDate_of_meeting().format(DateTimeFormatter.ofPattern(&quot;YYYY MMM dd&quot;))+&quot; &quot;;&#xD;&#xA;&#xD;&#xA;for (int i=0;i&lt;smtMeeting.getMeeting_th_to().size();i++ )&#xD;&#xA;{&#xD;&#xA;&#x9;SmtMeetingThTo meetingThTo = smtMeeting.getMeeting_th_to().get( i );&#xD;&#xA;&#x9;if (meetingThTo.getTherapy()==null)&#xD;&#xA;&#x9;&#x9;continue; // protection&#xD;&#xA;&#x9;if (i>0)&#xD;&#xA;&#x9;&#x9;display+=&quot;, &quot;;&#xD;&#xA;&#x9;display+= meetingThTo.getTherapy().getName();&#xD;&#xA;}&#xD;&#xA;// Bonita is not protected againts too big display, we have to do its jobs&#xD;&#xA;if (display.length()>255)&#xD;&#xA;&#x9;display = display.substring(0,255);&#xD;&#xA;&#xD;&#xA;return display;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
            <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_MBHDvhngEemBtMMqTz0rcw" name="smtMeeting" dataType="_MBHGdBngEemBtMMqTz0rcw" className="com.company.model.SmtMeeting"/>
          </dynamicLabel>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_MBHDvxngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_MBHDwBngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <data xmi:type="process:Data" xmi:id="_MBHDwRngEemBtMMqTz0rcw" name="taskCode" dataType="_MBHGcRngEemBtMMqTz0rcw">
            <defaultValue xmi:type="expression:Expression" xmi:id="_MBHDwhngEemBtMMqTz0rcw" name="CONCLUSION" content="CONCLUSION"/>
          </data>
          <operations xmi:type="expression:Operation" xmi:id="_MBHDwxngEemBtMMqTz0rcw">
            <leftOperand xmi:type="expression:Expression" xmi:id="_MBHDxBngEemBtMMqTz0rcw" name="smtMeeting" content="smtMeeting" type="TYPE_VARIABLE" returnType="com.company.model.SmtMeeting">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_MBHDxRngEemBtMMqTz0rcw" name="smtMeeting" dataType="_MBHGdBngEemBtMMqTz0rcw" className="com.company.model.SmtMeeting"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_MBHDxhngEemBtMMqTz0rcw" name="smtMeetingInput.meeting_Th_To" content="import java.util.logging.Logger&#xD;&#xA;&#xD;&#xA;import org.bonitasoft.engine.identity.User&#xD;&#xA;&#xD;&#xA;import com.company.model.SafetyTopic&#xD;&#xA;import com.company.model.SafetyTopicDAO&#xD;&#xA;import com.company.model.SmtMeeting&#xD;&#xA;import com.company.model.SmtMeetingThTo&#xD;&#xA;import com.company.model.SmtMeetingTopic&#xD;&#xA;import com.company.model.SmtMember&#xD;&#xA;import com.company.model.Therapy&#xD;&#xA;&#xD;&#xA;Logger logger = Logger.getLogger(&quot;org.bonitasoft.com&quot;);&#xD;&#xA;&#xD;&#xA;logger.info(&quot;Start save smtMeeting Conclusion&quot;);&#xD;&#xA;&#xD;&#xA;SmtMeeting smtMeetingVar = smtMeeting;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// register therapy&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;for (def meetingThToInput : smtMeetingInput.meeting_th_to)&#xD;&#xA;{&#xD;&#xA;&#x9;String message=&quot;meetingThToInput persistenceId[&quot;+meetingThToInput.persistenceId+&quot;]&quot;;&#xD;&#xA;&#x9;SmtMeetingThTo smtMeetingThToVar=null;&#xD;&#xA;&#x9;if (meetingThToInput.persistenceId !=null)&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;// search in the list&#xD;&#xA;&#x9;&#x9;List listMeetingThTo =smtMeetingVar.getMeeting_th_to();&#xD;&#xA;&#x9;&#x9;message+=&quot;Size BDM MeetingThTo=&quot;+listMeetingThTo.size()+&quot;;&quot;;&#xD;&#xA;&#x9;&#x9;for (int i=0;i&lt;listMeetingThTo.size();i++)&#xD;&#xA;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;message+=&quot;thtoPid=&quot;+listMeetingThTo.get( i ).persistenceId+&quot;,&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;if (listMeetingThTo.get( i ).persistenceId == meetingThToInput.persistenceId)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;smtMeetingThToVar = listMeetingThTo.get( i );&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;if (smtMeetingThToVar == null)&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;logger.info(&quot;meetingThTo Can't find &quot;+message+&quot; Input=&quot;+meetingThToInput);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;continue;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// set up now all the topics&#xD;&#xA;&#x9;List listCurrentTopics = smtMeetingThToVar.topics_meeting;&#xD;&#xA;&#x9;if (listCurrentTopics == null)&#xD;&#xA;&#x9;&#x9;listCurrentTopics= [];&#xD;&#xA;&#x9;for (def topicInput : meetingThToInput.topics_meeting)&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;message=&quot;meetingThTo Check Topics=&quot;+topicInput.persistenceId+&quot; [&quot;+topicInput.name+&quot;]&quot;;&#xD;&#xA;&#x9;&#x9;SmtMeetingTopic smtTopic;&#xD;&#xA;&#x9;&#x9;if (topicInput.persistenceId !=null)&#xD;&#xA;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;// already exist, must be in the listCurrentTopics&#xD;&#xA;&#x9;&#x9;&#x9;for (int j=0;j&lt;listCurrentTopics.size();j++)&#xD;&#xA;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;message+=&quot;topicsPid=&quot;+listCurrentTopics[ j ].persistenceId+&quot;,&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (listCurrentTopics[ j ].persistenceId == topicInput.persistenceId )&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;smtTopic = listCurrentTopics[ j ];&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;// topic must exist&#xD;&#xA;&#x9;&#x9;if (smtTopic ==null)&#xD;&#xA;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;logger.info(&quot;meetingThTo Can't find Topic &quot;+message);&#xD;&#xA;&#x9;&#x9;&#x9;continue;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;logger.info(&quot;meetingThTo assign smtTopic.persistenceid=&quot;+smtTopic.persistenceId+&quot; Selected = &quot;+topicInput.selected+&quot; Conclusion =&quot;+topicInput.conclusion);&#xD;&#xA;&#x9;&#x9;smtTopic.conclusion = topicInput.conclusion;&#xD;&#xA;&#x9;&#x9;smtTopic.selected = topicInput.selected;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;smtMeetingThToVar.topics_meeting=listCurrentTopics;&#xD;&#xA;&#x9;smtMeetingVar.meeting_th_to.add( smtMeetingThToVar );&#xD;&#xA;&#x9;&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;logger.info(&quot;End of SmtMeetingConclusion saved &quot;+smtMeetingVar.meeting_th_to.size()+&quot; thto&quot;);&#xD;&#xA;&#xD;&#xA;return smtMeetingVar" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="com.company.model.SmtMeeting">
              <referencedElements xmi:type="process:ContractInput" xmi:id="_MBHDxxngEemBtMMqTz0rcw" name="smtMeetingInput" type="COMPLEX"/>
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_MBHDyBngEemBtMMqTz0rcw" name="smtMeeting" dataType="_MBHGdBngEemBtMMqTz0rcw" className="com.company.model.SmtMeeting"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_MBHDyRngEemBtMMqTz0rcw" type="ASSIGNMENT" expression="setMeeting_th_to">
              <inputTypes>java.util.List</inputTypes>
            </operator>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_MBHDyhngEemBtMMqTz0rcw">
            <leftOperand xmi:type="expression:Expression" xmi:id="_MBHDyxngEemBtMMqTz0rcw" name="smtMeeting" content="smtMeeting" type="TYPE_VARIABLE" returnType="com.company.model.SmtMeeting">
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_MBHDzBngEemBtMMqTz0rcw" name="smtMeeting" dataType="_MBHGdBngEemBtMMqTz0rcw" className="com.company.model.SmtMeeting"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_MBHDzRngEemBtMMqTz0rcw" name="getChairPerson" content="import org.bonitasoft.engine.identity.User&#xD;&#xA;&#xD;&#xA;import com.company.model.SmtMeeting&#xD;&#xA;&#xD;&#xA;SmtMeeting smtMeetingVar = smtMeeting;&#xD;&#xA;if (smtMeetingInput.chairperson !=null &amp;&amp; smtMeetingInput.chairperson.trim().length()> 0)&#xD;&#xA;&#x9;&#x9;return smtMeetingInput.chairperson ;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;if (smtMeetingVar.getChairperson() == null || smtMeetingVar.getChairperson().trim().length()==0)&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;long idInitiator = apiAccessor.getProcessAPI().getProcessInstance(rootProcessInstanceId).getStartedBy();&#xD;&#xA;&#x9;&#x9;User user = apiAccessor.getIdentityAPI().getUser(idInitiator );&#xD;&#xA;&#x9;return user.getFirstName() + &quot; &quot;+user.getLastName();&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;// return the current person&#xD;&#xA;return smtMeetingVar.getChairperson();&#xD;&#xA;&#x9;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT">
              <referencedElements xmi:type="process:ContractInput" xmi:id="_MBHDzhngEemBtMMqTz0rcw" name="smtMeetingInput" type="COMPLEX"/>
              <referencedElements xmi:type="expression:Expression" xmi:id="_MBHDzxngEemBtMMqTz0rcw" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
              <referencedElements xmi:type="expression:Expression" xmi:id="_MBHD0BngEemBtMMqTz0rcw" name="rootProcessInstanceId" content="rootProcessInstanceId" type="TYPE_ENGINE_CONSTANT" returnType="java.lang.Long"/>
              <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_MBHD0RngEemBtMMqTz0rcw" name="smtMeeting" dataType="_MBHGdBngEemBtMMqTz0rcw" className="com.company.model.SmtMeeting"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_MBHD0hngEemBtMMqTz0rcw" type="JAVA_METHOD" expression="setChairperson">
              <inputTypes>java.lang.String</inputTypes>
            </operator>
          </operations>
          <loopCondition xmi:type="expression:Expression" xmi:id="_MBHD0xngEemBtMMqTz0rcw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_MBHD1BngEemBtMMqTz0rcw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_MBHD1RngEemBtMMqTz0rcw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_MBHD1hngEemBtMMqTz0rcw" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_MBHD1xngEemBtMMqTz0rcw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <entryRedirectionURL xmi:type="expression:Expression" xmi:id="_MBHD2BngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <confirmationMessage xmi:type="expression:Expression" xmi:id="_MBHD2RngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <formMapping xmi:type="process:FormMapping" xmi:id="_MBHD2hngEemBtMMqTz0rcw">
            <targetForm xmi:type="expression:Expression" xmi:id="_MBHD2xngEemBtMMqTz0rcw" name="SmtMeeting" content="929acb98-6c2c-4b25-95ae-9dc67693a1a3" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
          </formMapping>
          <contract xmi:type="process:Contract" xmi:id="_MBHD3BngEemBtMMqTz0rcw">
            <inputs xmi:type="process:ContractInput" xmi:id="_MBHD3RngEemBtMMqTz0rcw" name="smtMeetingInput" type="COMPLEX">
              <inputs xmi:type="process:ContractInput" xmi:id="_MBHD3hngEemBtMMqTz0rcw" name="meeting_th_to" type="COMPLEX" multiple="true">
                <inputs xmi:type="process:ContractInput" xmi:id="_MBHD3xngEemBtMMqTz0rcw" name="persistenceId" type="INTEGER"/>
                <inputs xmi:type="process:ContractInput" xmi:id="_MBHD4BngEemBtMMqTz0rcw" name="topics_meeting" type="COMPLEX" multiple="true">
                  <inputs xmi:type="process:ContractInput" xmi:id="_MBHD4RngEemBtMMqTz0rcw" name="conclusion">
                    <mapping xmi:type="process:ContractInputMapping" xmi:id="_MBHD4hngEemBtMMqTz0rcw"/>
                  </inputs>
                  <inputs xmi:type="process:ContractInput" xmi:id="_MBHD4xngEemBtMMqTz0rcw" name="persistenceId" type="INTEGER">
                    <mapping xmi:type="process:ContractInputMapping" xmi:id="_MBHD5BngEemBtMMqTz0rcw"/>
                  </inputs>
                </inputs>
              </inputs>
              <inputs xmi:type="process:ContractInput" xmi:id="_MBHD5RngEemBtMMqTz0rcw" name="chairperson">
                <mapping xmi:type="process:ContractInputMapping" xmi:id="_MBHD5hngEemBtMMqTz0rcw"/>
              </inputs>
            </inputs>
          </contract>
          <expectedDuration xmi:type="expression:Expression" xmi:id="_MBHD5xngEemBtMMqTz0rcw" name="" content="" returnType="java.lang.Long" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_MBHD6BngEemBtMMqTz0rcw" name="Gen. Minutes" outgoing="_MBHE7RngEemBtMMqTz0rcw" incoming="_MBHFBxngEemBtMMqTz0rcw" type="STANDARD" testBefore="true" useCardinality="true">
          <viewPageFlowRedirectionURL xmi:type="expression:Expression" xmi:id="_MBHD6RngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_MBHD6hngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_MBHD6xngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_MBHD7BngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <connectors xmi:type="process:Connector" xmi:id="_MBHD7RngEemBtMMqTz0rcw" name="Generate Minutes" definitionId="document-templating" event="ON_ENTER" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_MBHD7hngEemBtMMqTz0rcw" definitionId="document-templating" version="1.0.1" modelVersion="7.6.0-002">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_MBHD7xngEemBtMMqTz0rcw" key="documentInput">
                <expression xmi:type="expression:Expression" xmi:id="_MBHD8BngEemBtMMqTz0rcw" name="minutesTemplate" content="minutesTemplate" type="DOCUMENT_REF_TYPE" returnTypeFixed="true">
                  <referencedElements xmi:type="process:Document" xmi:id="_MBHD8RngEemBtMMqTz0rcw" name="minutesTemplate"/>
                </expression>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_MBHD8hngEemBtMMqTz0rcw" key="replacements">
                <expression xmi:type="expression:TableExpression" xmi:id="_MBHD8xngEemBtMMqTz0rcw">
                  <expressions xmi:type="expression:ListExpression" xmi:id="_MBHD9BngEemBtMMqTz0rcw">
                    <expressions xmi:type="expression:Expression" xmi:id="_MBHD9RngEemBtMMqTz0rcw" name="smtMeeting" content="smtMeeting" returnTypeFixed="true"/>
                    <expressions xmi:type="expression:Expression" xmi:id="_MBHD9hngEemBtMMqTz0rcw" name="smtMeeting" content="smtMeeting" type="TYPE_VARIABLE" returnType="com.company.model.SmtMeeting">
                      <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_MBHD9xngEemBtMMqTz0rcw" name="smtMeeting" dataType="_MBHGdBngEemBtMMqTz0rcw" className="com.company.model.SmtMeeting"/>
                    </expressions>
                  </expressions>
                  <expressions xmi:type="expression:ListExpression" xmi:id="_MBHD-BngEemBtMMqTz0rcw">
                    <expressions xmi:type="expression:Expression" xmi:id="_MBHD-RngEemBtMMqTz0rcw" name="smtMeetingThTo" content="smtMeetingThTo" returnTypeFixed="true"/>
                    <expressions xmi:type="expression:Expression" xmi:id="_MBHD-hngEemBtMMqTz0rcw" name="getCurrentMeetingThTo" content="import java.util.logging.Logger&#xD;&#xA;&#xD;&#xA;Logger logger = Logger.getLogger(&quot;org.bonitasoft.smtMeeting.generateMinutes&quot;);&#xD;&#xA;&#xD;&#xA;logger.info(&quot;SmtMeeting.Generate minutes loop &quot;+loopCounter+&quot;] for ThTo [&quot;+smtMeeting.getMeeting_th_to().get( loopCounter -1 ).getTherapy().getName()+&quot;]&quot;);&#xD;&#xA;return smtMeeting.getMeeting_th_to().get( loopCounter -1 );" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="com.company.model.SmtMeetingThTo">
                      <referencedElements xmi:type="expression:Expression" xmi:id="_MBHD-xngEemBtMMqTz0rcw" name="loopCounter" content="loopCounter" type="TYPE_ENGINE_CONSTANT" returnType="java.lang.Integer"/>
                      <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_MBHD_BngEemBtMMqTz0rcw" name="smtMeeting" dataType="_MBHGdBngEemBtMMqTz0rcw" className="com.company.model.SmtMeeting"/>
                    </expressions>
                  </expressions>
                  <expressions xmi:type="expression:ListExpression" xmi:id="_MBHD_RngEemBtMMqTz0rcw">
                    <expressions xmi:type="expression:Expression" xmi:id="_MBHD_hngEemBtMMqTz0rcw" name="transform" content="transform" returnTypeFixed="true"/>
                    <expressions xmi:type="expression:Expression" xmi:id="_MBHD_xngEemBtMMqTz0rcw" name="transform" content="&#xD;&#xA;import java.time.OffsetDateTime&#xD;&#xA;import java.time.format.DateTimeFormatter&#xD;&#xA;import java.util.logging.Logger&#xD;&#xA;&#xD;&#xA;import com.company.model.SmtMeeting&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;public class TransformLabel {&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;public String getKeyRiskLabel( String codeRisk )&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;if (codeRisk==null)&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;YES&quot;.equals(codeRisk))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Yes&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;NO&quot;.equals(codeRisk))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;No&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;EVALUATION&quot;.equals(codeRisk))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Under Evaluation&quot;;&#xD;&#xA;&#x9;&#x9;return codeRisk;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;public String getReviewPriority( String reviewPriority )&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;if (reviewPriority==null)&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;HIGH&quot;.equals(reviewPriority))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;High&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;MED&quot;.equals(reviewPriority))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Medium&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;LOW&quot;.equals(reviewPriority))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Low&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;UND&quot;.equals(reviewPriority))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Not Defined&quot;;&#xD;&#xA;&#x9;&#x9;return &quot;&quot;;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;public String getCategory( String category)&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;if (category==null)&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;&quot;;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;if(&quot;IDENTIFIED_RISK_IMPORTANT&quot;.equals(category))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Important Identified Risk&quot;;&#xD;&#xA;&#x9;&#x9;if(&quot;POTENTIAL_RISK_IMPORTANT&quot;.equals(category))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Important Potential Risk&quot;;&#xD;&#xA;&#x9;&#x9;if(&quot;IDENTIFIED_RISK_NOT_IMPORTANT&quot;.equals(category))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Identified Risk not categorized as important&quot;;&#xD;&#xA;&#x9;&#x9;if(&quot;POTENTIAL_RISK_NOT_IMPORTANT&quot;.equals(category))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Potential Risk not categorized as important&quot;;&#xD;&#xA;&#x9;&#x9;if(&quot;MISSING_INFORMATION&quot;.equals(category))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Missing Information&quot;;&#xD;&#xA;&#x9;&#x9;if(&quot;STANDARD_SAFETY_TOPIC&quot;.equals(category))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Standard Safety Topic&quot;;&#xD;&#xA;&#x9;&#x9;if(&quot;VALIDATED_SIGNAL&quot;.equals(category))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Validated Signal&quot;;&#xD;&#xA;&#x9;&#x9;if(&quot;HEALTH_AUTHORITY_REQUEST&quot;.equals(category))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Health Authority Request&quot;;&#xD;&#xA;&#x9;&#x9;if(&quot;HISTORIC_IDENTIFIED_RISK&quot;.equals(category))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Historic Identified Risk&quot;;&#xD;&#xA;&#x9;&#x9;if(&quot;HISTORIC_POTENTIAL_RISK&quot;.equals(category))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Historic Potential Risk&quot;;&#xD;&#xA;&#x9;&#x9;if(&quot;SAFETY_OBSERVATION_EVALUATION&quot;.equals(category))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Safety Observation undergoing evaluation&quot;;&#xD;&#xA;&#x9;&#x9;if(&quot;SAFETY_OBSERVATION&quot;.equals(category))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Safety Observation&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;return &quot;&quot;;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;public String getOrigin( String origin)&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;if (origin==null)&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;PRECLINICAL_SAFETY&quot;.equals(origin))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Preclinical Safety&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;CLINICAL_STUDIES&quot;.equals(origin))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Clinical Studies&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;EPIDEMIOLOGY_STUDY&quot;.equals(origin))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Epidemiology Studies&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;LITERATURE&quot;.equals(origin))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Literature&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;HEALTH_AUTHORITY&quot;.equals(origin))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Health Authority&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;OTHER_COMPANY&quot;.equals(origin))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Other Company / Compound (class-effect)&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;ARGUS_SAFETY_DATABASE&quot;.equals(origin))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Argus Safety Database&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;EXTERNAL_SAFETY_DATABASE&quot;.equals(origin))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;External Safety Database&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;STANDARD&quot;.equals(origin))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Standard (no specific origin)&quot;;&#xD;&#xA;&#x9;&#x9;return &quot;&quot;;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;public String getDateFromOffset(String format, OffsetDateTime dateTime)&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;if (dateTime ==null)&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;return dateTime.format( DateTimeFormatter.ofPattern(format));&#xD;&#xA;&#x9;}&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;Logger logger = Logger.getLogger(&quot;org.bonitasoft.smtMeeting&quot;);&#xD;&#xA; &#xD;&#xA;logger.info(&quot;GetTransformlabel object &quot;);&#xD;&#xA;&#xD;&#xA;return new TransformLabel();&#xD;&#xA;&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object"/>
                  </expressions>
                </expression>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_MBHEABngEemBtMMqTz0rcw" key="outputFileName">
                <expression xmi:type="expression:Expression" xmi:id="_MBHEARngEemBtMMqTz0rcw" name="outputFileName()" content="return &quot;Minutes &quot;+smtMeeting.getMeeting_th_to().get( loopCounter-1 ).getTherapy().getName()+&quot;.docx&quot;;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
                  <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_MBHEAhngEemBtMMqTz0rcw" name="smtMeeting" dataType="_MBHGdBngEemBtMMqTz0rcw" className="com.company.model.SmtMeeting"/>
                  <referencedElements xmi:type="expression:Expression" xmi:id="_MBHEAxngEemBtMMqTz0rcw" name="loopCounter" content="loopCounter" type="TYPE_ENGINE_CONSTANT" returnType="java.lang.Integer"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_MBHEBBngEemBtMMqTz0rcw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_MBHEBRngEemBtMMqTz0rcw" name="minutes" content="minutes" type="DOCUMENT_REF_TYPE" returnType="java.util.List">
                <referencedElements xmi:type="process:Document" xmi:id="_MBHEBhngEemBtMMqTz0rcw" name="minutes" multiple="true"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_MBHEBxngEemBtMMqTz0rcw" name="document" content="import java.util.logging.Logger&#xD;&#xA;&#xD;&#xA;import org.bonitasoft.engine.bpm.document.Document&#xD;&#xA;&#xD;&#xA;Logger logger = Logger.getLogger(&quot;org.bonitasoft.smtMeeting.generateMinutes&quot;);&#xD;&#xA;&#xD;&#xA;List&lt;Document> listMinutes = minutes;&#xD;&#xA;if (listMinutes==null)&#xD;&#xA;&#x9;listMinutes=[];&#xD;&#xA;&#x9;&#xD;&#xA;logger.info(&quot;stmMeeting.generateMinutes Add a new document in the list size=&quot;+listMinutes.size() );&#xD;&#xA;&#xD;&#xA;listMinutes.add( document );&#xD;&#xA;return listMinutes;&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List">
                <referencedElements xmi:type="process:Document" xmi:id="_MBHECBngEemBtMMqTz0rcw" name="minutes" multiple="true"/>
                <referencedElements xmi:type="definition:Output" xmi:id="_MBHECRngEemBtMMqTz0rcw" name="document" type="org.bonitasoft.engine.bpm.document.DocumentValue"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_MBHEChngEemBtMMqTz0rcw" type="DOCUMENT_LIST_SET"/>
            </outputs>
          </connectors>
          <loopCondition xmi:type="expression:Expression" xmi:id="_MBHECxngEemBtMMqTz0rcw" name="loopWhile()" content="import java.util.logging.Logger&#xD;&#xA;&#xD;&#xA;Logger logger = Logger.getLogger(&quot;LoopCounter [&quot;+loopCounter+&quot;] Size=[&quot;+smtMeeting.getMeeting_th_to().size()+&quot;]&quot;);&#xD;&#xA;&#xD;&#xA;return  loopCounter &lt; smtMeeting.getMeeting_th_to().size();" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean" returnTypeFixed="true">
            <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_MBHEDBngEemBtMMqTz0rcw" name="smtMeeting" dataType="_MBHGdBngEemBtMMqTz0rcw" className="com.company.model.SmtMeeting"/>
            <referencedElements xmi:type="expression:Expression" xmi:id="_MBHEDRngEemBtMMqTz0rcw" name="loopCounter" content="loopCounter" type="TYPE_ENGINE_CONSTANT" returnType="java.lang.Integer"/>
          </loopCondition>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_MBHEDhngEemBtMMqTz0rcw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_MBHEDxngEemBtMMqTz0rcw" name="numberOfInstancesToCreate()" content="&#xD;&#xA;return smtMeeting.getMeeting_th_to().size();" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Integer" returnTypeFixed="true">
            <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_MBHEEBngEemBtMMqTz0rcw" name="smtMeeting" dataType="_MBHGdBngEemBtMMqTz0rcw" className="com.company.model.SmtMeeting"/>
          </cardinalityExpression>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_MBHEERngEemBtMMqTz0rcw" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_MBHEEhngEemBtMMqTz0rcw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:Task" xmi:id="_MBHEExngEemBtMMqTz0rcw" name="Review/Finalize Minutes" outgoing="_MBHE_RngEemBtMMqTz0rcw" incoming="_MBHE7RngEemBtMMqTz0rcw _MBHFAxngEemBtMMqTz0rcw" overrideActorsOfTheLane="false">
          <viewPageFlowRedirectionURL xmi:type="expression:Expression" xmi:id="_MBHEFBngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_MBHEFRngEemBtMMqTz0rcw" name="displayName()" content="import java.text.SimpleDateFormat&#xD;&#xA;import java.time.format.DateTimeFormatter&#xD;&#xA;&#xD;&#xA;import com.company.model.SmtMeetingThTo&#xD;&#xA;&#xD;&#xA;String display=&quot;Minutes &quot;;&#xD;&#xA;&#xD;&#xA;if (smtMeeting.getDate_of_meeting()!=null)&#xD;&#xA;&#x9;display += smtMeeting.getDate_of_meeting().format(DateTimeFormatter.ofPattern(&quot;YYYY MMM dd&quot;))+&quot; &quot;;&#xD;&#xA;&#xD;&#xA;for (int i=0;i&lt;smtMeeting.getMeeting_th_to().size();i++ )&#xD;&#xA;{&#xD;&#xA;&#x9;SmtMeetingThTo meetingThTo = smtMeeting.getMeeting_th_to().get( i );&#xD;&#xA;&#x9;if (meetingThTo.getTherapy()==null)&#xD;&#xA;&#x9;&#x9;continue; // protection&#xD;&#xA;&#x9;if (i>0)&#xD;&#xA;&#x9;&#x9;display+=&quot;, &quot;;&#xD;&#xA;&#x9;display+= meetingThTo.getTherapy().getName();&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;// Bonita is not protected againts too big display, we have to do its jobs&#xD;&#xA;if (display.length()>255)&#xD;&#xA;&#x9;display = display.substring(0,255);&#xD;&#xA;&#xD;&#xA;return display;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
            <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_MBHEFhngEemBtMMqTz0rcw" name="smtMeeting" dataType="_MBHGdBngEemBtMMqTz0rcw" className="com.company.model.SmtMeeting"/>
          </dynamicLabel>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_MBHEFxngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_MBHEGBngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <data xmi:type="process:Data" xmi:id="_MBHEGRngEemBtMMqTz0rcw" name="taskCode" dataType="_MBHGcRngEemBtMMqTz0rcw">
            <defaultValue xmi:type="expression:Expression" xmi:id="_MBHEGhngEemBtMMqTz0rcw" name="MINUTES" content="MINUTES"/>
          </data>
          <operations xmi:type="expression:Operation" xmi:id="_MBHEGxngEemBtMMqTz0rcw">
            <leftOperand xmi:type="expression:Expression" xmi:id="_MBHEHBngEemBtMMqTz0rcw" name="decision" content="decision" type="TYPE_VARIABLE">
              <referencedElements xmi:type="process:Data" xmi:id="_MBHEHRngEemBtMMqTz0rcw" name="decision" dataType="_MBHGcRngEemBtMMqTz0rcw"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_MBHEHhngEemBtMMqTz0rcw" name="decisionInput" content="decisionInput" type="TYPE_CONTRACT_INPUT">
              <referencedElements xmi:type="process:ContractInput" xmi:id="_MBHEHxngEemBtMMqTz0rcw" name="decisionInput">
                <mapping xmi:type="process:ContractInputMapping" xmi:id="_MBHEIBngEemBtMMqTz0rcw"/>
              </referencedElements>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_MBHEIRngEemBtMMqTz0rcw" type="ASSIGNMENT"/>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_MBHEIhngEemBtMMqTz0rcw">
            <leftOperand xmi:type="expression:Expression" xmi:id="_MBHEIxngEemBtMMqTz0rcw" name="minutes" content="minutes" type="DOCUMENT_REF_TYPE" returnType="java.util.List">
              <referencedElements xmi:type="process:Document" xmi:id="_MBHEJBngEemBtMMqTz0rcw" name="minutes" multiple="true"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_MBHEJRngEemBtMMqTz0rcw" name="updateMinutesList" content="&#xD;&#xA;&#xD;&#xA;import java.util.logging.Logger;&#xD;&#xA;&#xD;&#xA;import org.bonitasoft.engine.bpm.document.DocumentValue&#xD;&#xA;&#xD;&#xA;List&lt;DocumentValue> listResult= new ArrayList&lt;DocumentValue>();&#xD;&#xA; &#xD;&#xA;Logger logger = Logger.getLogger(&quot;org.bonitasoft&quot;);&#xD;&#xA;&#xD;&#xA;for (int i=0; i&lt;minutesInput.size();i++)&#xD;&#xA;{&#xD;&#xA;&#x9;if (minutesInput.get( i )== null) {&#xD;&#xA;&#x9;&#x9; continue; // should never arrive&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;if (minutesInput.get( i ).get(&quot;setdoc&quot;) !=null)&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;def newFileDocumentInput = minutesInput.get( i ).get(&quot;setdoc&quot;)&#xD;&#xA;&#x9;&#x9;// we have a new content&#xD;&#xA;&#x9;&#x9;logger.info(&quot;Line [&quot;+i+&quot;] getFileName[&quot;+newFileDocumentInput.getFileName()+&quot;] class [&quot;+newFileDocumentInput.getClass().getName()+&quot;]&quot;)&#xD;&#xA;&#x9;&#x9;listResult.add( new DocumentValue( newFileDocumentInput.getContent(), newFileDocumentInput.getContentType(), newFileDocumentInput.getFileName()));&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} else if (minutesInput.get( i ).get(&quot;src&quot;) !=null)&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;// we want to keep the current document in this position&#xD;&#xA;&#x9;&#x9;logger.info(&quot;Line [&quot;+i+&quot;] Keep Document [&quot;+minutesInput.get( i ).get(&quot;src&quot;).get(&quot;id&quot;)+&quot;]&quot;);&#xD;&#xA;&#x9;&#x9;listResult.add( new DocumentValue( minutesInput.get( i ).get(&quot;src&quot;).get(&quot;id&quot;) ) );&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;// user give a new empty line : no new value, no old value, just ignore it&#xD;&#xA;&#x9;}&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return listResult;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List">
              <referencedElements xmi:type="process:ContractInput" xmi:id="_MBHEJhngEemBtMMqTz0rcw" name="minutesInput" type="COMPLEX" multiple="true">
                <mapping xmi:type="process:ContractInputMapping" xmi:id="_MBHEJxngEemBtMMqTz0rcw"/>
              </referencedElements>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_MBHEKBngEemBtMMqTz0rcw" type="DOCUMENT_LIST_SET"/>
          </operations>
          <operations xmi:type="expression:Operation" xmi:id="_MBHEKRngEemBtMMqTz0rcw">
            <leftOperand xmi:type="expression:Expression" xmi:id="_MBHEKhngEemBtMMqTz0rcw" name="eSignedMinutes" content="eSignedMinutes" type="DOCUMENT_REF_TYPE" returnType="java.util.List">
              <referencedElements xmi:type="process:Document" xmi:id="_MBHEKxngEemBtMMqTz0rcw" name="eSignedMinutes" multiple="true"/>
            </leftOperand>
            <rightOperand xmi:type="expression:Expression" xmi:id="_MBHELBngEemBtMMqTz0rcw" name="eSignedMinutesDocumentInput" content="&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;import java.util.logging.Logger;&#xD;&#xA;&#xD;&#xA;import org.bonitasoft.engine.bpm.document.DocumentValue&#xD;&#xA;&#xD;&#xA;List&lt;DocumentValue> listResult= new ArrayList&lt;DocumentValue>();&#xD;&#xA; &#xD;&#xA;Logger logger = Logger.getLogger(&quot;org.bonitasoft&quot;);&#xD;&#xA;&#xD;&#xA;for (int i=0; i&lt;eSignedMinutesDocumentInput.size();i++)&#xD;&#xA;{&#xD;&#xA;&#x9;if (eSignedMinutesDocumentInput.get( i )== null) {&#xD;&#xA;&#x9;&#x9; continue; // should never arrive&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;if (eSignedMinutesDocumentInput.get( i ).get(&quot;setdoc&quot;) !=null)&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;def newFileDocumentInput = eSignedMinutesDocumentInput.get( i ).get(&quot;setdoc&quot;)&#xD;&#xA;&#x9;&#x9;// we have a new content&#xD;&#xA;&#x9;&#x9;logger.info(&quot;Line [&quot;+i+&quot;] getFileName[&quot;+newFileDocumentInput.getFileName()+&quot;] class [&quot;+newFileDocumentInput.getClass().getName()+&quot;]&quot;)&#xD;&#xA;&#x9;&#x9;listResult.add( new DocumentValue( newFileDocumentInput.getContent(), newFileDocumentInput.getContentType(), newFileDocumentInput.getFileName()));&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} else if (eSignedMinutesDocumentInput.get( i ).get(&quot;src&quot;) !=null)&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;// we want to keep the current document in this position&#xD;&#xA;&#x9;&#x9;logger.info(&quot;Line [&quot;+i+&quot;] Keep Document [&quot;+eSignedMinutesDocumentInput.get( i ).get(&quot;src&quot;).get(&quot;id&quot;)+&quot;]&quot;);&#xD;&#xA;&#x9;&#x9;listResult.add( new DocumentValue( eSignedMinutesDocumentInput.get( i ).get(&quot;src&quot;).get(&quot;id&quot;) ) );&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;// user give a new empty line : no new value, no old value, just ignore it&#xD;&#xA;&#x9;}&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return listResult;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List">
              <referencedElements xmi:type="process:ContractInput" xmi:id="_MBHELRngEemBtMMqTz0rcw" name="eSignedMinutesDocumentInput" type="COMPLEX" multiple="true"/>
            </rightOperand>
            <operator xmi:type="expression:Operator" xmi:id="_MBHELhngEemBtMMqTz0rcw" type="DOCUMENT_LIST_SET"/>
          </operations>
          <loopCondition xmi:type="expression:Expression" xmi:id="_MBHELxngEemBtMMqTz0rcw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_MBHEMBngEemBtMMqTz0rcw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_MBHEMRngEemBtMMqTz0rcw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_MBHEMhngEemBtMMqTz0rcw" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_MBHEMxngEemBtMMqTz0rcw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <entryRedirectionURL xmi:type="expression:Expression" xmi:id="_MBHENBngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <confirmationMessage xmi:type="expression:Expression" xmi:id="_MBHENRngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <formMapping xmi:type="process:FormMapping" xmi:id="_MBHENhngEemBtMMqTz0rcw">
            <targetForm xmi:type="expression:Expression" xmi:id="_MBHENxngEemBtMMqTz0rcw" name="SmtMeeting" content="929acb98-6c2c-4b25-95ae-9dc67693a1a3" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
          </formMapping>
          <contract xmi:type="process:Contract" xmi:id="_MBHEOBngEemBtMMqTz0rcw">
            <inputs xmi:type="process:ContractInput" xmi:id="_MBHEORngEemBtMMqTz0rcw" name="decisionInput">
              <mapping xmi:type="process:ContractInputMapping" xmi:id="_MBHEOhngEemBtMMqTz0rcw"/>
            </inputs>
            <inputs xmi:type="process:ContractInput" xmi:id="_MBHEOxngEemBtMMqTz0rcw" name="minutesInput" type="COMPLEX" multiple="true">
              <mapping xmi:type="process:ContractInputMapping" xmi:id="_MBHEPBngEemBtMMqTz0rcw"/>
              <inputs xmi:type="process:ContractInput" xmi:id="_MBHEPRngEemBtMMqTz0rcw" name="setdoc" type="FILE">
                <mapping xmi:type="process:ContractInputMapping" xmi:id="_MBHEPhngEemBtMMqTz0rcw"/>
              </inputs>
            </inputs>
            <inputs xmi:type="process:ContractInput" xmi:id="_MBHEPxngEemBtMMqTz0rcw" name="eSignedMinutesDocumentInput" type="COMPLEX" multiple="true">
              <inputs xmi:type="process:ContractInput" xmi:id="_MBHEQBngEemBtMMqTz0rcw" name="setdoc" type="FILE">
                <mapping xmi:type="process:ContractInputMapping" xmi:id="_MBHEQRngEemBtMMqTz0rcw"/>
              </inputs>
            </inputs>
          </contract>
          <expectedDuration xmi:type="expression:Expression" xmi:id="_MBHEQhngEemBtMMqTz0rcw" name="2 days" content="&#xD;&#xA;return (long) (2 * 24 * 60 * 60 * 1000)" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Long" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:EndEvent" xmi:id="_MBHEQxngEemBtMMqTz0rcw" name="End1" incoming="_MBHFABngEemBtMMqTz0rcw">
          <viewPageFlowRedirectionURL xmi:type="expression:Expression" xmi:id="_MBHERBngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_MBHERRngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_MBHERhngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_MBHERxngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:XORGateway" xmi:id="_MBHESBngEemBtMMqTz0rcw" name="Gateway1" outgoing="_MBHE8xngEemBtMMqTz0rcw _MBHE9hngEemBtMMqTz0rcw" incoming="_MBHE8BngEemBtMMqTz0rcw" exclusiveOutgoingTransition="true">
          <viewPageFlowRedirectionURL xmi:type="expression:Expression" xmi:id="_MBHESRngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_MBHEShngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_MBHESxngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_MBHETBngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_MBHETRngEemBtMMqTz0rcw" name="Gen. Agenda/Handout" outgoing="_MBHE-hngEemBtMMqTz0rcw" incoming="_MBHE4BngEemBtMMqTz0rcw _MBHE8xngEemBtMMqTz0rcw">
          <viewPageFlowRedirectionURL xmi:type="expression:Expression" xmi:id="_MBHEThngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_MBHETxngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_MBHEUBngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_MBHEURngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <connectors xmi:type="process:Connector" xmi:id="_MBHEUhngEemBtMMqTz0rcw" name="load Agenda Tpl document" definitionId="loadDocumentFromDisk" event="ON_ENTER" ignoreErrors="true" definitionVersion="1.0.0">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_MBHEUxngEemBtMMqTz0rcw" definitionId="loadDocumentFromDisk" version="1.0.0" modelVersion="7.6.0-002">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_MBHEVBngEemBtMMqTz0rcw" key="pathFile">
                <expression xmi:type="expression:Expression" xmi:id="_MBHEVRngEemBtMMqTz0rcw" name="pathTemplateDocument" content="return pathTemplateDocument+ &quot;/Draft_SMT meeting agenda_template.docx&quot;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_MBHEVhngEemBtMMqTz0rcw" name="pathTemplateDocument" typeClassname="java.lang.String" description="If the path is set, then the template document may be read in this directory"/>
                </expression>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_MBHEVxngEemBtMMqTz0rcw" key="documentName">
                <expression xmi:type="expression:Expression" xmi:id="_MBHEWBngEemBtMMqTz0rcw" name="Draft_SMT meeting agenda_template.docx" content="Draft_SMT meeting agenda_template.docx" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_MBHEWRngEemBtMMqTz0rcw" key="contentType">
                <expression xmi:type="expression:Expression" xmi:id="_MBHEWhngEemBtMMqTz0rcw" content="" returnTypeFixed="true"/>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_MBHEWxngEemBtMMqTz0rcw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_MBHEXBngEemBtMMqTz0rcw" name="agendaTemplate" content="agendaTemplate" type="DOCUMENT_REF_TYPE">
                <referencedElements xmi:type="process:Document" xmi:id="_MBHEXRngEemBtMMqTz0rcw" name="agendaTemplate"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_MBHEXhngEemBtMMqTz0rcw" name="document" content="import java.util.logging.Logger&#xD;&#xA;&#xD;&#xA;import org.bonitasoft.engine.api.ProcessAPI&#xD;&#xA;import org.bonitasoft.engine.bpm.document.DocumentValue&#xD;&#xA;&#xD;&#xA;import com.bonitasoft.engine.api.APIAccessor&#xD;&#xA;&#xD;&#xA;Logger logger = Logger.getLogger( &quot;org.bonitasoft.loadDocumentHandout&quot;);&#xD;&#xA;logger.info(&quot;loadDocumentHandout : document =[&quot;+document+&quot;]&quot;);&#xD;&#xA;if (document!=null)&#xD;&#xA;&#x9;return document&#xD;&#xA;&#xD;&#xA;// return the current document&#xD;&#xA;ProcessAPI processAPI = apiAccessor.getProcessAPI();&#xD;&#xA;logger.info(&quot;loadDocumentHandout : search default handout template&quot;);&#xD;&#xA;Long documentId = processAPI.getDocumentAtProcessInstantiation(processInstanceId, &quot;handoutTemplate&quot;);&#xD;&#xA;logger.info(&quot;loadDocumentHandout : search default found handout template id=[&quot;+documentId+&quot;]&quot;);&#xD;&#xA;&#xD;&#xA;return new DocumentValue(documentId);&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="org.bonitasoft.engine.bpm.document.DocumentValue">
                <referencedElements xmi:type="expression:Expression" xmi:id="_MBHEXxngEemBtMMqTz0rcw" name="processInstanceId" content="processInstanceId" type="TYPE_ENGINE_CONSTANT" returnType="java.lang.Long"/>
                <referencedElements xmi:type="expression:Expression" xmi:id="_MBHEYBngEemBtMMqTz0rcw" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
                <referencedElements xmi:type="definition:Output" xmi:id="_MBHEYRngEemBtMMqTz0rcw" name="document" type="org.bonitasoft.engine.bpm.document.DocumentValue"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_MBHEYhngEemBtMMqTz0rcw" type="DOCUMENT_CREATE_UPDATE"/>
            </outputs>
          </connectors>
          <connectors xmi:type="process:Connector" xmi:id="_MBHEYxngEemBtMMqTz0rcw" name="agenda" definitionId="document-templating" event="ON_ENTER" ignoreErrors="true" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_MBHEZBngEemBtMMqTz0rcw" definitionId="document-templating" version="1.0.1" modelVersion="7.6.0-002">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_MBHEZRngEemBtMMqTz0rcw" key="documentInput">
                <expression xmi:type="expression:Expression" xmi:id="_MBHEZhngEemBtMMqTz0rcw" name="agendaTemplate" content="agendaTemplate" type="DOCUMENT_REF_TYPE" returnTypeFixed="true">
                  <referencedElements xmi:type="process:Document" xmi:id="_MBHEZxngEemBtMMqTz0rcw" name="agendaTemplate"/>
                </expression>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_MBHEaBngEemBtMMqTz0rcw" key="replacements">
                <expression xmi:type="expression:TableExpression" xmi:id="_MBHEaRngEemBtMMqTz0rcw">
                  <expressions xmi:type="expression:ListExpression" xmi:id="_MBHEahngEemBtMMqTz0rcw">
                    <expressions xmi:type="expression:Expression" xmi:id="_MBHEaxngEemBtMMqTz0rcw" name="smtMeeting" content="smtMeeting" returnTypeFixed="true"/>
                    <expressions xmi:type="expression:Expression" xmi:id="_MBHEbBngEemBtMMqTz0rcw" name="smtMeeting" content="smtMeeting" type="TYPE_VARIABLE" returnType="com.company.model.SmtMeeting">
                      <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_MBHEbRngEemBtMMqTz0rcw" name="smtMeeting" dataType="_MBHGdBngEemBtMMqTz0rcw" className="com.company.model.SmtMeeting"/>
                    </expressions>
                  </expressions>
                  <expressions xmi:type="expression:ListExpression" xmi:id="_MBHEbhngEemBtMMqTz0rcw">
                    <expressions xmi:type="expression:Expression" xmi:id="_MBHEbxngEemBtMMqTz0rcw" name="transform" content="transform" returnTypeFixed="true"/>
                    <expressions xmi:type="expression:Expression" xmi:id="_MBHEcBngEemBtMMqTz0rcw" name="transform" content="&#xD;&#xA;import java.time.OffsetDateTime&#xD;&#xA;import java.time.format.DateTimeFormatter&#xD;&#xA;import java.util.logging.Logger&#xD;&#xA;&#xD;&#xA;import com.company.model.SmtMeeting&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;public class TransformLabel {&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;public String getKeyRiskLabel( String codeRisk )&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;if (codeRisk==null)&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;YES&quot;.equals(codeRisk))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Yes&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;NO&quot;.equals(codeRisk))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;No&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;EVALUATION&quot;.equals(codeRisk))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Under Evaluation&quot;;&#xD;&#xA;&#x9;&#x9;return codeRisk;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;public String getReviewPriority( String reviewPriority )&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;if (reviewPriority==null)&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;HIGH&quot;.equals(reviewPriority))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;High&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;MED&quot;.equals(reviewPriority))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Medium&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;LOW&quot;.equals(reviewPriority))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Low&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;UND&quot;.equals(reviewPriority))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Not Defined&quot;;&#xD;&#xA;&#x9;&#x9;return &quot;&quot;;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;public String getCategory( String category)&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;if (category==null)&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;&quot;;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;if(&quot;IDENTIFIED_RISK_IMPORTANT&quot;.equals(category))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Important Identified Risk&quot;;&#xD;&#xA;&#x9;&#x9;if(&quot;POTENTIAL_RISK_IMPORTANT&quot;.equals(category))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Important Potential Risk&quot;;&#xD;&#xA;&#x9;&#x9;if(&quot;IDENTIFIED_RISK_NOT_IMPORTANT&quot;.equals(category))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Identified Risk not categorized as important&quot;;&#xD;&#xA;&#x9;&#x9;if(&quot;POTENTIAL_RISK_NOT_IMPORTANT&quot;.equals(category))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Potential Risk not categorized as important&quot;;&#xD;&#xA;&#x9;&#x9;if(&quot;MISSING_INFORMATION&quot;.equals(category))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Missing Information&quot;;&#xD;&#xA;&#x9;&#x9;if(&quot;STANDARD_SAFETY_TOPIC&quot;.equals(category))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Standard Safety Topic&quot;;&#xD;&#xA;&#x9;&#x9;if(&quot;VALIDATED_SIGNAL&quot;.equals(category))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Validated Signal&quot;;&#xD;&#xA;&#x9;&#x9;if(&quot;HEALTH_AUTHORITY_REQUEST&quot;.equals(category))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Health Authority Request&quot;;&#xD;&#xA;&#x9;&#x9;if(&quot;HISTORIC_IDENTIFIED_RISK&quot;.equals(category))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Historic Identified Risk&quot;;&#xD;&#xA;&#x9;&#x9;if(&quot;HISTORIC_POTENTIAL_RISK&quot;.equals(category))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Historic Potential Risk&quot;;&#xD;&#xA;&#x9;&#x9;if(&quot;SAFETY_OBSERVATION_EVALUATION&quot;.equals(category))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Safety Observation undergoing evaluation&quot;;&#xD;&#xA;&#x9;&#x9;if(&quot;SAFETY_OBSERVATION&quot;.equals(category))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Safety Observation&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;return &quot;&quot;;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;public String getOrigin( String origin)&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;if (origin==null)&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;PRECLINICAL_SAFETY&quot;.equals(origin))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Preclinical Safety&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;CLINICAL_STUDIES&quot;.equals(origin))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Clinical Studies&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;EPIDEMIOLOGY_STUDY&quot;.equals(origin))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Epidemiology Studies&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;LITERATURE&quot;.equals(origin))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Literature&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;HEALTH_AUTHORITY&quot;.equals(origin))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Health Authority&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;OTHER_COMPANY&quot;.equals(origin))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Other Company / Compound (class-effect)&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;ARGUS_SAFETY_DATABASE&quot;.equals(origin))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Argus Safety Database&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;EXTERNAL_SAFETY_DATABASE&quot;.equals(origin))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;External Safety Database&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;STANDARD&quot;.equals(origin))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Standard (no specific origin)&quot;;&#xD;&#xA;&#x9;&#x9;return &quot;&quot;;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;public String getDateFromOffset(String format, OffsetDateTime dateTime)&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;if (dateTime ==null)&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;return dateTime.format( DateTimeFormatter.ofPattern(format));&#xD;&#xA;&#x9;}&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;Logger logger = Logger.getLogger(&quot;org.bonitasoft.smtMeeting&quot;);&#xD;&#xA; &#xD;&#xA;logger.info(&quot;GetTransformlabel object &quot;);&#xD;&#xA;&#xD;&#xA;return new TransformLabel();&#xD;&#xA;&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object"/>
                  </expressions>
                </expression>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_MBHEcRngEemBtMMqTz0rcw" key="outputFileName">
                <expression xmi:type="expression:Expression" xmi:id="_MBHEchngEemBtMMqTz0rcw" name="Agenda.docx" content="Agenda.docx" returnTypeFixed="true"/>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_MBHEcxngEemBtMMqTz0rcw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_MBHEdBngEemBtMMqTz0rcw" name="agenda" content="agenda" type="DOCUMENT_REF_TYPE">
                <referencedElements xmi:type="process:Document" xmi:id="_MBHEdRngEemBtMMqTz0rcw" name="agenda"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_MBHEdhngEemBtMMqTz0rcw" name="document" content="document" type="CONNECTOR_OUTPUT_TYPE" returnType="org.bonitasoft.engine.bpm.document.DocumentValue">
                <referencedElements xmi:type="definition:Output" xmi:id="_MBHEdxngEemBtMMqTz0rcw" name="document" type="org.bonitasoft.engine.bpm.document.DocumentValue"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_MBHEeBngEemBtMMqTz0rcw" type="DOCUMENT_CREATE_UPDATE"/>
            </outputs>
          </connectors>
          <connectors xmi:type="process:Connector" xmi:id="_MBHEeRngEemBtMMqTz0rcw" name="load Handout tpl document" definitionId="loadDocumentFromDisk" event="ON_ENTER" ignoreErrors="true" definitionVersion="1.0.0">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_MBHEehngEemBtMMqTz0rcw" definitionId="loadDocumentFromDisk" version="1.0.0" modelVersion="7.6.0-002">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_MBHEexngEemBtMMqTz0rcw" key="pathFile">
                <expression xmi:type="expression:Expression" xmi:id="_MBHEfBngEemBtMMqTz0rcw" name="pathTemplateDocument" content="return pathTemplateDocument+ &quot;/Draft_SMT meeting handout_template.docx&quot;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_MBHEfRngEemBtMMqTz0rcw" name="pathTemplateDocument" typeClassname="java.lang.String" description="If the path is set, then the template document may be read in this directory"/>
                </expression>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_MBHEfhngEemBtMMqTz0rcw" key="documentName">
                <expression xmi:type="expression:Expression" xmi:id="_MBHEfxngEemBtMMqTz0rcw" name="Draft_SMT meeting handout_template.docx" content="Draft_SMT meeting handout_template.docx" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_MBHEgBngEemBtMMqTz0rcw" key="contentType">
                <expression xmi:type="expression:Expression" xmi:id="_MBHEgRngEemBtMMqTz0rcw" content="" returnTypeFixed="true"/>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_MBHEghngEemBtMMqTz0rcw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_MBHEgxngEemBtMMqTz0rcw" name="handoutTemplate" content="handoutTemplate" type="DOCUMENT_REF_TYPE">
                <referencedElements xmi:type="process:Document" xmi:id="_MBHEhBngEemBtMMqTz0rcw" name="handoutTemplate"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_MBHEhRngEemBtMMqTz0rcw" name="document" content="import java.util.logging.Logger&#xD;&#xA;&#xD;&#xA;import org.bonitasoft.engine.api.ProcessAPI&#xD;&#xA;import org.bonitasoft.engine.bpm.document.DocumentValue&#xD;&#xA;&#xD;&#xA;import com.bonitasoft.engine.api.APIAccessor&#xD;&#xA;&#xD;&#xA;Logger logger = Logger.getLogger( &quot;org.bonitasoft.loadDocumentHandout&quot;);&#xD;&#xA;logger.info(&quot;loadDocumentHandout : document =[&quot;+document+&quot;]&quot;);&#xD;&#xA;if (document!=null)&#xD;&#xA;&#x9;return document&#xD;&#xA;&#xD;&#xA;// return the current document&#xD;&#xA;ProcessAPI processAPI = apiAccessor.getProcessAPI();&#xD;&#xA;logger.info(&quot;loadDocumentHandout : search default handout template&quot;);&#xD;&#xA;Long documentId = processAPI.getDocumentAtProcessInstantiation(processInstanceId, &quot;handoutTemplate&quot;);&#xD;&#xA;logger.info(&quot;loadDocumentHandout : search default found handout template id=[&quot;+documentId+&quot;]&quot;);&#xD;&#xA;&#xD;&#xA;return new DocumentValue(documentId);&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="org.bonitasoft.engine.bpm.document.DocumentValue">
                <referencedElements xmi:type="expression:Expression" xmi:id="_MBHEhhngEemBtMMqTz0rcw" name="processInstanceId" content="processInstanceId" type="TYPE_ENGINE_CONSTANT" returnType="java.lang.Long"/>
                <referencedElements xmi:type="expression:Expression" xmi:id="_MBHEhxngEemBtMMqTz0rcw" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
                <referencedElements xmi:type="definition:Output" xmi:id="_MBHEiBngEemBtMMqTz0rcw" name="document" type="org.bonitasoft.engine.bpm.document.DocumentValue"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_MBHEiRngEemBtMMqTz0rcw" type="DOCUMENT_CREATE_UPDATE"/>
            </outputs>
          </connectors>
          <connectors xmi:type="process:Connector" xmi:id="_MBHEihngEemBtMMqTz0rcw" name="handout" definitionId="document-templating" event="ON_ENTER" ignoreErrors="true" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_MBHEixngEemBtMMqTz0rcw" definitionId="document-templating" version="1.0.1" modelVersion="7.6.0-002">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_MBHEjBngEemBtMMqTz0rcw" key="documentInput">
                <expression xmi:type="expression:Expression" xmi:id="_MBHEjRngEemBtMMqTz0rcw" name="handoutTemplate" content="handoutTemplate" type="DOCUMENT_REF_TYPE" returnTypeFixed="true">
                  <referencedElements xmi:type="process:Document" xmi:id="_MBHEjhngEemBtMMqTz0rcw" name="handoutTemplate"/>
                </expression>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_MBHEjxngEemBtMMqTz0rcw" key="replacements">
                <expression xmi:type="expression:TableExpression" xmi:id="_MBHEkBngEemBtMMqTz0rcw">
                  <expressions xmi:type="expression:ListExpression" xmi:id="_MBHEkRngEemBtMMqTz0rcw">
                    <expressions xmi:type="expression:Expression" xmi:id="_MBHEkhngEemBtMMqTz0rcw" name="smtMeeting" content="smtMeeting" returnTypeFixed="true"/>
                    <expressions xmi:type="expression:Expression" xmi:id="_MBHEkxngEemBtMMqTz0rcw" name="smtMeeting" content="smtMeeting" type="TYPE_VARIABLE" returnType="com.company.model.SmtMeeting">
                      <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_MBHElBngEemBtMMqTz0rcw" name="smtMeeting" dataType="_MBHGdBngEemBtMMqTz0rcw" className="com.company.model.SmtMeeting"/>
                    </expressions>
                  </expressions>
                  <expressions xmi:type="expression:ListExpression" xmi:id="_MBHElRngEemBtMMqTz0rcw">
                    <expressions xmi:type="expression:Expression" xmi:id="_MBHElhngEemBtMMqTz0rcw" name="transform" content="transform" returnTypeFixed="true"/>
                    <expressions xmi:type="expression:Expression" xmi:id="_MBHElxngEemBtMMqTz0rcw" name="transform" content="&#xD;&#xA;import java.time.OffsetDateTime&#xD;&#xA;import java.time.format.DateTimeFormatter&#xD;&#xA;import java.util.logging.Logger&#xD;&#xA;&#xD;&#xA;import com.company.model.SmtMeeting&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;public class TransformLabel {&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;public String getKeyRiskLabel( String codeRisk )&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;if (codeRisk==null)&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;YES&quot;.equals(codeRisk))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Yes&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;NO&quot;.equals(codeRisk))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;No&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;EVALUATION&quot;.equals(codeRisk))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Under Evaluation&quot;;&#xD;&#xA;&#x9;&#x9;return codeRisk;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;public String getReviewPriority( String reviewPriority )&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;if (reviewPriority==null)&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;HIGH&quot;.equals(reviewPriority))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;High&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;MED&quot;.equals(reviewPriority))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Medium&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;LOW&quot;.equals(reviewPriority))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Low&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;UND&quot;.equals(reviewPriority))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Not Defined&quot;;&#xD;&#xA;&#x9;&#x9;return &quot;&quot;;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;public String getCategory( String category)&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;if (category==null)&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;&quot;;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;if(&quot;IDENTIFIED_RISK_IMPORTANT&quot;.equals(category))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Important Identified Risk&quot;;&#xD;&#xA;&#x9;&#x9;if(&quot;POTENTIAL_RISK_IMPORTANT&quot;.equals(category))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Important Potential Risk&quot;;&#xD;&#xA;&#x9;&#x9;if(&quot;IDENTIFIED_RISK_NOT_IMPORTANT&quot;.equals(category))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Identified Risk not categorized as important&quot;;&#xD;&#xA;&#x9;&#x9;if(&quot;POTENTIAL_RISK_NOT_IMPORTANT&quot;.equals(category))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Potential Risk not categorized as important&quot;;&#xD;&#xA;&#x9;&#x9;if(&quot;MISSING_INFORMATION&quot;.equals(category))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Missing Information&quot;;&#xD;&#xA;&#x9;&#x9;if(&quot;STANDARD_SAFETY_TOPIC&quot;.equals(category))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Standard Safety Topic&quot;;&#xD;&#xA;&#x9;&#x9;if(&quot;VALIDATED_SIGNAL&quot;.equals(category))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Validated Signal&quot;;&#xD;&#xA;&#x9;&#x9;if(&quot;HEALTH_AUTHORITY_REQUEST&quot;.equals(category))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Health Authority Request&quot;;&#xD;&#xA;&#x9;&#x9;if(&quot;HISTORIC_IDENTIFIED_RISK&quot;.equals(category))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Historic Identified Risk&quot;;&#xD;&#xA;&#x9;&#x9;if(&quot;HISTORIC_POTENTIAL_RISK&quot;.equals(category))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Historic Potential Risk&quot;;&#xD;&#xA;&#x9;&#x9;if(&quot;SAFETY_OBSERVATION_EVALUATION&quot;.equals(category))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Safety Observation undergoing evaluation&quot;;&#xD;&#xA;&#x9;&#x9;if(&quot;SAFETY_OBSERVATION&quot;.equals(category))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Safety Observation&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;return &quot;&quot;;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;public String getOrigin( String origin)&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;if (origin==null)&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;PRECLINICAL_SAFETY&quot;.equals(origin))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Preclinical Safety&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;CLINICAL_STUDIES&quot;.equals(origin))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Clinical Studies&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;EPIDEMIOLOGY_STUDY&quot;.equals(origin))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Epidemiology Studies&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;LITERATURE&quot;.equals(origin))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Literature&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;HEALTH_AUTHORITY&quot;.equals(origin))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Health Authority&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;OTHER_COMPANY&quot;.equals(origin))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Other Company / Compound (class-effect)&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;ARGUS_SAFETY_DATABASE&quot;.equals(origin))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Argus Safety Database&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;EXTERNAL_SAFETY_DATABASE&quot;.equals(origin))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;External Safety Database&quot;;&#xD;&#xA;&#x9;&#x9;if (&quot;STANDARD&quot;.equals(origin))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;Standard (no specific origin)&quot;;&#xD;&#xA;&#x9;&#x9;return &quot;&quot;;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;public String getDateFromOffset(String format, OffsetDateTime dateTime)&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;if (dateTime ==null)&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;return dateTime.format( DateTimeFormatter.ofPattern(format));&#xD;&#xA;&#x9;}&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;Logger logger = Logger.getLogger(&quot;org.bonitasoft.smtMeeting&quot;);&#xD;&#xA; &#xD;&#xA;logger.info(&quot;GetTransformlabel object &quot;);&#xD;&#xA;&#xD;&#xA;return new TransformLabel();&#xD;&#xA;&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object"/>
                  </expressions>
                </expression>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_MBHEmBngEemBtMMqTz0rcw" key="outputFileName">
                <expression xmi:type="expression:Expression" xmi:id="_MBHEmRngEemBtMMqTz0rcw" name="handout.docx" content="handout.docx" returnTypeFixed="true"/>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_MBHEmhngEemBtMMqTz0rcw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_MBHEmxngEemBtMMqTz0rcw" name="handout" content="handout" type="DOCUMENT_REF_TYPE">
                <referencedElements xmi:type="process:Document" xmi:id="_MBHEnBngEemBtMMqTz0rcw" name="handout"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_MBHEnRngEemBtMMqTz0rcw" name="document" content="document" type="CONNECTOR_OUTPUT_TYPE" returnType="org.bonitasoft.engine.bpm.document.DocumentValue">
                <referencedElements xmi:type="definition:Output" xmi:id="_MBHEnhngEemBtMMqTz0rcw" name="document" type="org.bonitasoft.engine.bpm.document.DocumentValue"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_MBHEnxngEemBtMMqTz0rcw" type="DOCUMENT_CREATE_UPDATE"/>
            </outputs>
          </connectors>
          <loopCondition xmi:type="expression:Expression" xmi:id="_MBHEoBngEemBtMMqTz0rcw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_MBHEoRngEemBtMMqTz0rcw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_MBHEohngEemBtMMqTz0rcw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_MBHEoxngEemBtMMqTz0rcw" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_MBHEpBngEemBtMMqTz0rcw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:XORGateway" xmi:id="_MBHEpRngEemBtMMqTz0rcw" name="Save ?" outgoing="_MBHFABngEemBtMMqTz0rcw _MBHFAxngEemBtMMqTz0rcw" incoming="_MBHE_RngEemBtMMqTz0rcw" exclusiveOutgoingTransition="true">
          <viewPageFlowRedirectionURL xmi:type="expression:Expression" xmi:id="_MBHEphngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_MBHEpxngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_MBHEqBngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_MBHEqRngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_MBHEqhngEemBtMMqTz0rcw" name="Reload Tpl Minutes" outgoing="_MBHFBxngEemBtMMqTz0rcw" incoming="_MBHE6hngEemBtMMqTz0rcw _MBHE9hngEemBtMMqTz0rcw">
          <viewPageFlowRedirectionURL xmi:type="expression:Expression" xmi:id="_MBHEqxngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_MBHErBngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_MBHErRngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_MBHErhngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
          <connectors xmi:type="process:Connector" xmi:id="_MBHErxngEemBtMMqTz0rcw" name="load Minutes Tpl document" definitionId="loadDocumentFromDisk" event="ON_ENTER" ignoreErrors="true" definitionVersion="1.0.0">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_MBHEsBngEemBtMMqTz0rcw" definitionId="loadDocumentFromDisk" version="1.0.0" modelVersion="7.6.0-002">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_MBHEsRngEemBtMMqTz0rcw" key="pathFile">
                <expression xmi:type="expression:Expression" xmi:id="_MBHEshngEemBtMMqTz0rcw" name="pathTemplateDocument" content="return pathTemplateDocument+ &quot;/Draft_SMT meeting minutes_template.docx&quot;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true">
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_MBHEsxngEemBtMMqTz0rcw" name="pathTemplateDocument" typeClassname="java.lang.String" description="If the path is set, then the template document may be read in this directory"/>
                </expression>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_MBHEtBngEemBtMMqTz0rcw" key="documentName">
                <expression xmi:type="expression:Expression" xmi:id="_MBHEtRngEemBtMMqTz0rcw" name="Draft_SMT meeting minutes_template.docx" content="Draft_SMT meeting minutes_template.docx" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_MBHEthngEemBtMMqTz0rcw" key="contentType">
                <expression xmi:type="expression:Expression" xmi:id="_MBHEtxngEemBtMMqTz0rcw" content="" returnTypeFixed="true"/>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_MBHEuBngEemBtMMqTz0rcw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_MBHEuRngEemBtMMqTz0rcw" name="minutesTemplate" content="minutesTemplate" type="DOCUMENT_REF_TYPE">
                <referencedElements xmi:type="process:Document" xmi:id="_MBHEuhngEemBtMMqTz0rcw" name="minutesTemplate"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_MBHEuxngEemBtMMqTz0rcw" name="document" content="import java.util.logging.Logger&#xD;&#xA;&#xD;&#xA;import org.bonitasoft.engine.api.ProcessAPI&#xD;&#xA;import org.bonitasoft.engine.bpm.document.DocumentValue&#xD;&#xA;&#xD;&#xA;import com.bonitasoft.engine.api.APIAccessor&#xD;&#xA;&#xD;&#xA;Logger logger = Logger.getLogger( &quot;org.bonitasoft.loadDocumentHandout&quot;);&#xD;&#xA;logger.info(&quot;loadDocumentHandout : document =[&quot;+document+&quot;]&quot;);&#xD;&#xA;if (document!=null)&#xD;&#xA;&#x9;return document&#xD;&#xA;&#xD;&#xA;// return the current document&#xD;&#xA;ProcessAPI processAPI = apiAccessor.getProcessAPI();&#xD;&#xA;logger.info(&quot;loadDocumentHandout : search default handout template&quot;);&#xD;&#xA;Long documentId = processAPI.getDocumentAtProcessInstantiation(processInstanceId, &quot;handoutTemplate&quot;);&#xD;&#xA;logger.info(&quot;loadDocumentHandout : search default found handout template id=[&quot;+documentId+&quot;]&quot;);&#xD;&#xA;&#xD;&#xA;return new DocumentValue(documentId);&#xD;&#xA;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="org.bonitasoft.engine.bpm.document.DocumentValue">
                <referencedElements xmi:type="expression:Expression" xmi:id="_MBHEvBngEemBtMMqTz0rcw" name="processInstanceId" content="processInstanceId" type="TYPE_ENGINE_CONSTANT" returnType="java.lang.Long"/>
                <referencedElements xmi:type="expression:Expression" xmi:id="_MBHEvRngEemBtMMqTz0rcw" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
                <referencedElements xmi:type="definition:Output" xmi:id="_MBHEvhngEemBtMMqTz0rcw" name="document" type="org.bonitasoft.engine.bpm.document.DocumentValue"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_MBHEvxngEemBtMMqTz0rcw" type="DOCUMENT_CREATE_UPDATE"/>
            </outputs>
          </connectors>
          <loopCondition xmi:type="expression:Expression" xmi:id="_MBHEwBngEemBtMMqTz0rcw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_MBHEwRngEemBtMMqTz0rcw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_MBHEwhngEemBtMMqTz0rcw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_MBHEwxngEemBtMMqTz0rcw" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_MBHExBngEemBtMMqTz0rcw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
      </elements>
      <resourceFolders xmi:type="process:ResourceFolder" xmi:id="_MD8VABngEemBtMMqTz0rcw" path="_MBHDcRngEemBtMMqTz0rcw/application/application"/>
      <mandatorySymbol xmi:type="expression:Expression" xmi:id="_MBHExhngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
      <mandatoryLabel xmi:type="expression:Expression" xmi:id="_MBHExxngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
      <errorTemplate xmi:type="process:AssociatedFile" xmi:id="_MBHEyBngEemBtMMqTz0rcw" path="_bvTOsQOnEemCCJls1xImjg/html/error.html"/>
      <processTemplate xmi:type="process:AssociatedFile" xmi:id="_MBHEyRngEemBtMMqTz0rcw" path="_MBHDcRngEemBtMMqTz0rcw/html/process.html"/>
      <pageTemplate xmi:type="process:AssociatedFile" xmi:id="_MBHEyhngEemBtMMqTz0rcw" path="_MBHDcRngEemBtMMqTz0rcw/html/page.html"/>
      <consultationTemplate xmi:type="process:AssociatedFile" xmi:id="_MBHEyxngEemBtMMqTz0rcw" path="_MBHDcRngEemBtMMqTz0rcw/html/consultation.html"/>
      <data xmi:type="process:BusinessObjectData" xmi:id="_MBHEzBngEemBtMMqTz0rcw" name="smtMeeting" dataType="_MBHGdBngEemBtMMqTz0rcw" className="com.company.model.SmtMeeting">
        <defaultValue xmi:type="expression:Expression" xmi:id="_MBHEzRngEemBtMMqTz0rcw" name="initSmtMeeting()" content="import java.util.logging.Logger&#xD;&#xA;&#xD;&#xA;import org.bonitasoft.engine.identity.User&#xD;&#xA;&#xD;&#xA;import com.company.model.SafetyTopic&#xD;&#xA;import com.company.model.SafetyTopicDAO&#xD;&#xA;import com.company.model.SmtMeetingThTo&#xD;&#xA;import com.company.model.SmtMeetingTopic&#xD;&#xA;import com.company.model.SmtMember&#xD;&#xA;import com.company.model.Therapy&#xD;&#xA;&#xD;&#xA;Logger logger = Logger.getLogger(&quot;org.bonitasoft.com&quot;);&#xD;&#xA;&#xD;&#xA;logger.info(&quot;Start save smtMeeting&quot;);&#xD;&#xA;&#xD;&#xA;def smtMeetingVar = new com.company.model.SmtMeeting()&#xD;&#xA;smtMeetingVar.date_of_meeting = smtMeetingInput.date_of_meeting&#xD;&#xA;smtMeetingVar.meeting_members = new ArrayList();&#xD;&#xA;&#xD;&#xA;// register members&#xD;&#xA;for (def smtMemberInput : smtMeetingInput.meeting_members)&#xD;&#xA;{&#xD;&#xA;&#x9;logger.info(&quot;Member isPresent ? &quot;+smtMemberInput.is_present+&quot; Input=&quot;+smtMemberInput.toString());&#xD;&#xA;&#x9;if (! smtMemberInput.is_present)&#xD;&#xA;&#x9;&#x9;continue;&#xD;&#xA;&#x9;SmtMember newMember=null;&#xD;&#xA;&#x9;if (smtMemberInput.persistenceId == -1)&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;logger.info(&quot;new Member [&quot;+smtMemberInput.name+&quot;]&quot;);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;newMember = smtMemberDAO.newInstance( smtMemberInput.name );&#xD;&#xA;&#x9;&#x9;newMember.email = smtMemberInput.email;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;logger.info(&quot;existing Memeber [&quot;+smtMemberInput.persistenceId+&quot;]&quot;);&#xD;&#xA;&#x9;&#x9;newMember = smtMemberDAO.findByPersistenceId(smtMemberInput.persistenceId.toLong())&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;// search the job title of the person&#xD;&#xA;&#x9;newMember.role_member = smtMemberInput.role_member;&#xD;&#xA;&#x9;try&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;User user = apiAccessor.getIdentityAPI().getUserByUserName(smtMemberInput.name);&#xD;&#xA;&#x9;&#x9;newMember.role_member = user.getJobTitle();&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;catch(Exception e)&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;logger.info(&quot;User [&quot;+smtMemberInput.name+&quot;] not found, can't get its role&quot;);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;smtMeetingVar.meeting_members.add( newMember );&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;// register therapy&#xD;&#xA;smtMeetingVar.meeting_th_to = new ArrayList();&#xD;&#xA;&#xD;&#xA;for (def meetingThToInput : smtMeetingInput.meeting_th_to)&#xD;&#xA;{&#xD;&#xA;&#x9;logger.info(&quot;meetingThTo persistenceId[&quot;+meetingThToInput.persistenceId+&quot;] Input=&quot;+meetingThToInput);&#xD;&#xA;&#x9;SmtMeetingThTo smtMeetingThTo=null;&#xD;&#xA;&#x9;if (meetingThToInput.persistenceId !=null)&#xD;&#xA;&#x9;&#x9;smtMeetingThTo = smtMeetingThToDAO.findByPersistenceId(meetingThToInput.persistenceId.toLong())&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;smtMeetingThTo  = smtMeetingThToDAO.newInstance();&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;// associate the therapy to this line&#xD;&#xA;&#x9;Therapy therapy=null;&#xD;&#xA;&#x9;if (meetingThToInput.therapy !=null &amp;&amp; meetingThToInput.therapy.persistenceId !=null)&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;therapy = therapyDAO.findByPersistenceId(meetingThToInput.therapy.persistenceId);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;smtMeetingThTo.setTherapy(therapy);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// set up now all the topics&#xD;&#xA;&#x9;List listCurrentTopics = smtMeetingThTo.topics_meeting;&#xD;&#xA;&#x9;if (listCurrentTopics == null)&#xD;&#xA;&#x9;&#x9;listCurrentTopics= [];&#xD;&#xA;&#x9;for (def topicInput : meetingThToInput.topics_meeting)&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;logger.info(&quot;meetingThTo Check Topics=&quot;+topicInput.persistenceId+&quot; [&quot;+topicInput.name+&quot;]&quot;);&#xD;&#xA;&#x9;&#x9;SmtMeetingTopic smtTopic;&#xD;&#xA;&#x9;&#x9;if (topicInput.persistenceId !=null)&#xD;&#xA;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;// already exist, must be in the listCurrentTopics&#xD;&#xA;&#x9;&#x9;&#x9;for (int j=0;j&lt;listCurrentTopics.size();j++)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (listCurrentTopics[ j ].persistenceId == topicInput.persistenceId )&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;smtTopic = listCurrentTopics[ j ];&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;// create a new one&#xD;&#xA;&#x9;&#x9;if (smtTopic==null)&#xD;&#xA;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;logger.info(&quot;meetingThTo Create new smtMeetingTopics=&quot;+topicInput);&#xD;&#xA;&#x9;&#x9;&#x9;smtTopic = new SmtMeetingTopic()&#xD;&#xA;&#x9;&#x9;&#x9;logger.info(&quot;meetingThTo Create Reference safetyTopicPersistenceId =&quot;+topicInput.safety_topic.persistenceId);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;def safetyTopicLoaded = safetyTopicDAO.findByPersistenceId( (long) topicInput.safety_topic.persistenceId );&#xD;&#xA;&#x9;&#x9;&#x9;smtTopic.safety_topic = safetyTopicLoaded;&#xD;&#xA;&#x9;&#x9;&#x9;listCurrentTopics.add( smtTopic);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;logger.info(&quot;meetingThTo Found existing in the list &quot;+smtTopic);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;smtTopic.selected =topicInput.selected;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;smtMeetingThTo.topics_meeting=listCurrentTopics;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;smtMeetingVar.meeting_th_to.add( smtMeetingThTo );&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;// fullfill the chairperson&#xD;&#xA;logger.info(&quot;ChairpersonInput =[&quot;+smtMeetingInput.chairperson+&quot;]&quot;);&#xD;&#xA;if (smtMeetingInput.chairperson != null &amp;&amp; smtMeetingInput.chairperson.trim().length()>0)&#xD;&#xA;{&#xD;&#xA;&#x9;logger.info(&quot;Chairperson set it to [&quot;+smtMeetingInput.chairperson+&quot;]&quot;);&#xD;&#xA;&#x9;&#x9;smtMeetingVar.setChairperson( smtMeetingInput.chairperson );&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;}&#xD;&#xA;if (smtMeetingVar.getChairperson() == null || smtMeetingVar.getChairperson().trim().length()==0)&#xD;&#xA;{&#xD;&#xA;&#x9;long idInitiator = apiAccessor.getProcessAPI().getProcessInstance(rootProcessInstanceId).getStartedBy();&#xD;&#xA;&#x9;User user = apiAccessor.getIdentityAPI().getUser(idInitiator );&#xD;&#xA;&#x9;smtMeetingVar.setChairperson( user.getFirstName() + &quot; &quot;+user.getLastName());&#xD;&#xA;&#x9;logger.info(&quot;Chairperson is empty, default value is [&quot;+smtMeetingVar.getChairperson()+&quot;]&quot;);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;logger.info(&quot;End of SmtMeeting initialisation - saved &quot;+smtMeetingVar.meeting_th_to.size()+&quot; thto&quot;);&#xD;&#xA;&#xD;&#xA;return smtMeetingVar" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="com.company.model.SmtMeeting">
          <referencedElements xmi:type="expression:Expression" xmi:id="_MBHEzhngEemBtMMqTz0rcw" name="therapyDAO" content="therapyDAO" type="TYPE_BUSINESS_OBJECT_DAO" returnType="com.company.model.TherapyDAO" returnTypeFixed="true"/>
          <referencedElements xmi:type="process:ContractInput" xmi:id="_MBHEzxngEemBtMMqTz0rcw" name="smtMeetingInput" type="COMPLEX"/>
          <referencedElements xmi:type="expression:Expression" xmi:id="_MBHE0BngEemBtMMqTz0rcw" name="safetyTopicDAO" content="safetyTopicDAO" type="TYPE_BUSINESS_OBJECT_DAO" returnType="com.company.model.SafetyTopicDAO" returnTypeFixed="true"/>
          <referencedElements xmi:type="expression:Expression" xmi:id="_MBHE0RngEemBtMMqTz0rcw" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
          <referencedElements xmi:type="expression:Expression" xmi:id="_MBHE0hngEemBtMMqTz0rcw" name="smtMemberDAO" content="smtMemberDAO" type="TYPE_BUSINESS_OBJECT_DAO" returnType="com.company.model.SmtMemberDAO" returnTypeFixed="true"/>
          <referencedElements xmi:type="expression:Expression" xmi:id="_MBHE0xngEemBtMMqTz0rcw" name="smtMeetingThToDAO" content="smtMeetingThToDAO" type="TYPE_BUSINESS_OBJECT_DAO" returnType="com.company.model.SmtMeetingThToDAO" returnTypeFixed="true"/>
          <referencedElements xmi:type="expression:Expression" xmi:id="_MBHE1BngEemBtMMqTz0rcw" name="rootProcessInstanceId" content="rootProcessInstanceId" type="TYPE_ENGINE_CONSTANT" returnType="java.lang.Long"/>
        </defaultValue>
      </data>
      <data xmi:type="process:Data" xmi:id="_MBHE1RngEemBtMMqTz0rcw" name="decision" dataType="_MBHGcRngEemBtMMqTz0rcw">
        <defaultValue xmi:type="expression:Expression" xmi:id="_MBHE1hngEemBtMMqTz0rcw" content=""/>
      </data>
      <confirmationTemplate xmi:type="process:AssociatedFile" xmi:id="_MBHE1xngEemBtMMqTz0rcw" path="_MBHDcRngEemBtMMqTz0rcw/html/_MBHDcRngEemBtMMqTz0rcwconfirmation.html"/>
      <entryRedirectionURL xmi:type="expression:Expression" xmi:id="_MBHE2BngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
      <confirmationMessage xmi:type="expression:Expression" xmi:id="_MBHE2RngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
      <formMapping xmi:type="process:FormMapping" xmi:id="_MBHE2hngEemBtMMqTz0rcw">
        <targetForm xmi:type="expression:Expression" xmi:id="_MBHE2xngEemBtMMqTz0rcw" name="SmtMeeting" content="929acb98-6c2c-4b25-95ae-9dc67693a1a3" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
      </formMapping>
      <recapPageFlowRedirectionURL xmi:type="expression:Expression" xmi:id="_MBHE3BngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
      <overviewFormMapping xmi:type="process:FormMapping" xmi:id="_MBHE3RngEemBtMMqTz0rcw">
        <targetForm xmi:type="expression:Expression" xmi:id="_MBHE3hngEemBtMMqTz0rcw" name="SmtMeeting" content="929acb98-6c2c-4b25-95ae-9dc67693a1a3" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
      </overviewFormMapping>
      <viewPageFlowRedirectionURL xmi:type="expression:Expression" xmi:id="_MBHE3xngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
      <connections xmi:type="process:SequenceFlow" xmi:id="_MBHE4BngEemBtMMqTz0rcw" target="_MBHETRngEemBtMMqTz0rcw" source="_MBHDeBngEemBtMMqTz0rcw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_MBHE4RngEemBtMMqTz0rcw"/>
        <condition xmi:type="expression:Expression" xmi:id="_MBHE4hngEemBtMMqTz0rcw" name="" content="" type="TYPE_CONDITION" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_MBHE4xngEemBtMMqTz0rcw" name="Save" target="_MBHDeBngEemBtMMqTz0rcw" source="_MBHDthngEemBtMMqTz0rcw" isDefault="true">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_MBHE5BngEemBtMMqTz0rcw"/>
        <condition xmi:type="expression:Expression" xmi:id="_MBHE5RngEemBtMMqTz0rcw" name="" content="" type="TYPE_CONDITION" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_MBHE5hngEemBtMMqTz0rcw" target="_MBHDuxngEemBtMMqTz0rcw" source="_MBHDthngEemBtMMqTz0rcw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_MBHE5xngEemBtMMqTz0rcw"/>
        <condition xmi:type="expression:Expression" xmi:id="_MBHE6BngEemBtMMqTz0rcw" name="isConclusion" content="&quot;CONCLUSION&quot;.equals( decision)" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="process:Data" xmi:id="_MBHE6RngEemBtMMqTz0rcw" name="decision" dataType="_MBHGcRngEemBtMMqTz0rcw"/>
        </condition>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_MBHE6hngEemBtMMqTz0rcw" target="_MBHEqhngEemBtMMqTz0rcw" source="_MBHDuxngEemBtMMqTz0rcw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_MBHE6xngEemBtMMqTz0rcw"/>
        <condition xmi:type="expression:Expression" xmi:id="_MBHE7BngEemBtMMqTz0rcw" name="" type="TYPE_CONDITION" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_MBHE7RngEemBtMMqTz0rcw" target="_MBHEExngEemBtMMqTz0rcw" source="_MBHD6BngEemBtMMqTz0rcw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_MBHE7hngEemBtMMqTz0rcw"/>
        <condition xmi:type="expression:Expression" xmi:id="_MBHE7xngEemBtMMqTz0rcw" name="" type="TYPE_CONDITION" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_MBHE8BngEemBtMMqTz0rcw" target="_MBHESBngEemBtMMqTz0rcw" source="_MBHDcxngEemBtMMqTz0rcw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_MBHE8RngEemBtMMqTz0rcw"/>
        <condition xmi:type="expression:Expression" xmi:id="_MBHE8hngEemBtMMqTz0rcw" name="" type="TYPE_CONDITION" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_MBHE8xngEemBtMMqTz0rcw" target="_MBHETRngEemBtMMqTz0rcw" source="_MBHESBngEemBtMMqTz0rcw" isDefault="true">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_MBHE9BngEemBtMMqTz0rcw"/>
        <condition xmi:type="expression:Expression" xmi:id="_MBHE9RngEemBtMMqTz0rcw" name="" content="" type="TYPE_CONDITION" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_MBHE9hngEemBtMMqTz0rcw" target="_MBHEqhngEemBtMMqTz0rcw" source="_MBHESBngEemBtMMqTz0rcw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_MBHE9xngEemBtMMqTz0rcw"/>
        <condition xmi:type="expression:Expression" xmi:id="_MBHE-BngEemBtMMqTz0rcw" name="directAccess" content="directAccess" type="TYPE_PARAMETER" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="parameter:Parameter" xmi:id="_MBHE-RngEemBtMMqTz0rcw" name="directAccess" typeClassname="java.lang.Boolean"/>
        </condition>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_MBHE-hngEemBtMMqTz0rcw" target="_MBHDthngEemBtMMqTz0rcw" source="_MBHETRngEemBtMMqTz0rcw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_MBHE-xngEemBtMMqTz0rcw"/>
        <condition xmi:type="expression:Expression" xmi:id="_MBHE_BngEemBtMMqTz0rcw" name="" content="" type="TYPE_CONDITION" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_MBHE_RngEemBtMMqTz0rcw" target="_MBHEpRngEemBtMMqTz0rcw" source="_MBHEExngEemBtMMqTz0rcw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_MBHE_hngEemBtMMqTz0rcw"/>
        <condition xmi:type="expression:Expression" xmi:id="_MBHE_xngEemBtMMqTz0rcw" name="" content="" type="TYPE_CONDITION" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_MBHFABngEemBtMMqTz0rcw" target="_MBHEQxngEemBtMMqTz0rcw" source="_MBHEpRngEemBtMMqTz0rcw" isDefault="true">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_MBHFARngEemBtMMqTz0rcw"/>
        <condition xmi:type="expression:Expression" xmi:id="_MBHFAhngEemBtMMqTz0rcw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_MBHFAxngEemBtMMqTz0rcw" target="_MBHEExngEemBtMMqTz0rcw" source="_MBHEpRngEemBtMMqTz0rcw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_MBHFBBngEemBtMMqTz0rcw"/>
        <condition xmi:type="expression:Expression" xmi:id="_MBHFBRngEemBtMMqTz0rcw" name="isSave" content="return &quot;SAVE&quot;.equals( decision)" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Boolean" returnTypeFixed="true">
          <referencedElements xmi:type="process:Data" xmi:id="_MBHFBhngEemBtMMqTz0rcw" name="decision" dataType="_MBHGcRngEemBtMMqTz0rcw"/>
        </condition>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_MBHFBxngEemBtMMqTz0rcw" target="_MBHD6BngEemBtMMqTz0rcw" source="_MBHEqhngEemBtMMqTz0rcw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_MBHFCBngEemBtMMqTz0rcw"/>
        <condition xmi:type="expression:Expression" xmi:id="_MBHFCRngEemBtMMqTz0rcw" name="" type="TYPE_CONDITION" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <actors xmi:type="process:Actor" xmi:id="_MBHFChngEemBtMMqTz0rcw" documentation="This is an example of actor that is mapped to any ACME users" name="Lead Safety Physician" initiator="true"/>
      <configurations xmi:type="configuration:Configuration" xmi:id="_MBHFCxngEemBtMMqTz0rcw" name="Production" version="7.6.0-002" username="walter.bates" password="bpm">
        <actorMappings xmi:type="actormapping:ActorMappingsType" xmi:id="_MBHFDBngEemBtMMqTz0rcw">
          <actorMapping xmi:type="actormapping:ActorMapping" xmi:id="_MBHFDRngEemBtMMqTz0rcw" name="Lead Safety Physician">
            <groups xmi:type="actormapping:Groups" xmi:id="_MBHFDhngEemBtMMqTz0rcw">
              <group>/acme/production/services</group>
            </groups>
            <memberships xmi:type="actormapping:Membership" xmi:id="_MBHFDxngEemBtMMqTz0rcw"/>
            <roles xmi:type="actormapping:Roles" xmi:id="_MBHFEBngEemBtMMqTz0rcw"/>
            <users xmi:type="actormapping:Users" xmi:id="_MBHFERngEemBtMMqTz0rcw"/>
          </actorMapping>
        </actorMappings>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_MBHFEhngEemBtMMqTz0rcw" type="CONNECTOR" definitionId="document-converter" definitionVersion="1.0.2" implementationId="document-converter-impl" implementationVersion="1.0.2"/>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_MBHFExngEemBtMMqTz0rcw" type="CONNECTOR" definitionId="document-templating" definitionVersion="1.0.1" implementationId="document-templating-impl" implementationVersion="1.0.1"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHFFBngEemBtMMqTz0rcw" id="ACTOR_FILTER"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHFFRngEemBtMMqTz0rcw" id="CONNECTOR">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_MBHFFhngEemBtMMqTz0rcw" id="document-converter-impl-1.0.2">
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFFxngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="bonita-connector-document-converter-impl-1.0.2.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFGBngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="oro-2.0.8.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFGRngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="itext-2.1.7.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFGhngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="fr.opensagres.xdocreport.template.velocity-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFGxngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="org.odftoolkit.odfdom.converter.xhtml-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFHBngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="fr.opensagres.xdocreport.converter-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFHRngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="commons-lang-2.4.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFHhngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="xercesImpl-2.9.1.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFHxngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="org.odftoolkit.odfdom.converter.pdf-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFIBngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="poi-3.10-FINAL.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFIRngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="org.apache.poi.xwpf.converter.core-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFIhngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="odfdom-java-0.8.7.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFIxngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="org.odftoolkit.odfdom.converter.core-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFJBngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="fr.opensagres.xdocreport.converter.odt.odfdom-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFJRngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="fr.opensagres.xdocreport.converter.docx.xwpf-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFJhngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="org.apache.poi.xwpf.converter.xhtml-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFJxngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="fr.opensagres.xdocreport.document-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFKBngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="fr.opensagres.xdocreport.template-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFKRngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="ooxml-schemas-1.1.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFKhngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="poi-ooxml-3.10-FINAL.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFKxngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="fr.opensagres.xdocreport.itext.extension-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFLBngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="org.apache.poi.xwpf.converter.pdf-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFLRngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="fr.opensagres.xdocreport.document.docx-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFLhngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="fr.opensagres.xdocreport.document.odt-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFLxngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="fr.opensagres.xdocreport.core-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFMBngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="velocity-1.7.jar" type="CONNECTOR"/>
          </children>
          <children xmi:type="configuration:FragmentContainer" xmi:id="_MBHFMRngEemBtMMqTz0rcw" id="document-templating-impl-1.0.1">
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFMhngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="bonita-connector-document-templating-impl-1.0.1.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFMxngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="oro-2.0.8.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFNBngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="itext-2.1.7.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFNRngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="fr.opensagres.xdocreport.template.velocity-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFNhngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="org.odftoolkit.odfdom.converter.xhtml-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFNxngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="fr.opensagres.xdocreport.converter-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFOBngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="commons-lang-2.4.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFORngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="org.odftoolkit.odfdom.converter.pdf-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFOhngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="xercesImpl-2.9.1.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFOxngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="org.odftoolkit.odfdom.converter.core-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFPBngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="odfdom-java-0.8.7.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFPRngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="fr.opensagres.xdocreport.converter.odt.odfdom-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFPhngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="fr.opensagres.xdocreport.document-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFPxngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="fr.opensagres.xdocreport.template-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFQBngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="fr.opensagres.xdocreport.itext.extension-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFQRngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="fr.opensagres.xdocreport.document.docx-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFQhngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="velocity-1.7.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFQxngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="fr.opensagres.xdocreport.core-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFRBngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="fr.opensagres.xdocreport.document.odt-1.0.5.jar" type="CONNECTOR"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHFRRngEemBtMMqTz0rcw" id="DATA_TYPES"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHFRhngEemBtMMqTz0rcw" id="GROOVY_SCRIPT"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHFRxngEemBtMMqTz0rcw" id="OTHER"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHFSBngEemBtMMqTz0rcw" id="DATA_TYPES"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHFSRngEemBtMMqTz0rcw" id="GROOVY_SCRIPT"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHFShngEemBtMMqTz0rcw" id="VALIDATOR"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHFSxngEemBtMMqTz0rcw" id="OTHER"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_MBHFTBngEemBtMMqTz0rcw" name="directAccess" value="true" typeClassname="java.lang.Boolean"/>
      </configurations>
      <configurations xmi:type="configuration:Configuration" xmi:id="_MBHFTRngEemBtMMqTz0rcw" name="Qualification" version="7.6.0-002" username="walter.bates" password="bpm">
        <actorMappings xmi:type="actormapping:ActorMappingsType" xmi:id="_MBHFThngEemBtMMqTz0rcw">
          <actorMapping xmi:type="actormapping:ActorMapping" xmi:id="_MBHFTxngEemBtMMqTz0rcw" name="Lead Safety Physician">
            <groups xmi:type="actormapping:Groups" xmi:id="_MBHFUBngEemBtMMqTz0rcw"/>
            <memberships xmi:type="actormapping:Membership" xmi:id="_MBHFURngEemBtMMqTz0rcw"/>
            <roles xmi:type="actormapping:Roles" xmi:id="_MBHFUhngEemBtMMqTz0rcw"/>
            <users xmi:type="actormapping:Users" xmi:id="_MBHFUxngEemBtMMqTz0rcw"/>
          </actorMapping>
        </actorMappings>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_MBHFVBngEemBtMMqTz0rcw" type="CONNECTOR" definitionId="document-converter" definitionVersion="1.0.2" implementationId="document-converter-impl" implementationVersion="1.0.2"/>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_MBHFVRngEemBtMMqTz0rcw" type="CONNECTOR" definitionId="document-templating" definitionVersion="1.0.1" implementationId="document-templating-impl" implementationVersion="1.0.1"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHFVhngEemBtMMqTz0rcw" id="ACTOR_FILTER"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHFVxngEemBtMMqTz0rcw" id="CONNECTOR">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_MBHFWBngEemBtMMqTz0rcw" id="document-converter-impl-1.0.2">
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFWRngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="bonita-connector-document-converter-impl-1.0.2.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFWhngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="oro-2.0.8.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFWxngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="itext-2.1.7.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFXBngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="fr.opensagres.xdocreport.template.velocity-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFXRngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="org.odftoolkit.odfdom.converter.xhtml-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFXhngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="fr.opensagres.xdocreport.converter-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFXxngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="commons-lang-2.4.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFYBngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="xercesImpl-2.9.1.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFYRngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="org.odftoolkit.odfdom.converter.pdf-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFYhngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="poi-3.10-FINAL.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFYxngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="org.apache.poi.xwpf.converter.core-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFZBngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="odfdom-java-0.8.7.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFZRngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="org.odftoolkit.odfdom.converter.core-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFZhngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="fr.opensagres.xdocreport.converter.odt.odfdom-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFZxngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="fr.opensagres.xdocreport.converter.docx.xwpf-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFaBngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="org.apache.poi.xwpf.converter.xhtml-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFaRngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="fr.opensagres.xdocreport.document-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFahngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="fr.opensagres.xdocreport.template-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFaxngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="ooxml-schemas-1.1.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFbBngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="poi-ooxml-3.10-FINAL.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFbRngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="fr.opensagres.xdocreport.itext.extension-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFbhngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="org.apache.poi.xwpf.converter.pdf-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFbxngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="fr.opensagres.xdocreport.document.docx-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFcBngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="fr.opensagres.xdocreport.document.odt-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFcRngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="fr.opensagres.xdocreport.core-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFchngEemBtMMqTz0rcw" key="document-converter-impl -- 1.0.2" value="velocity-1.7.jar" type="CONNECTOR"/>
          </children>
          <children xmi:type="configuration:FragmentContainer" xmi:id="_MBHFcxngEemBtMMqTz0rcw" id="document-templating-impl-1.0.1">
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFdBngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="bonita-connector-document-templating-impl-1.0.1.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFdRngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="oro-2.0.8.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFdhngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="itext-2.1.7.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFdxngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="fr.opensagres.xdocreport.template.velocity-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFeBngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="org.odftoolkit.odfdom.converter.xhtml-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFeRngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="fr.opensagres.xdocreport.converter-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFehngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="commons-lang-2.4.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFexngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="org.odftoolkit.odfdom.converter.pdf-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFfBngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="xercesImpl-2.9.1.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFfRngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="org.odftoolkit.odfdom.converter.core-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFfhngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="odfdom-java-0.8.7.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFfxngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="fr.opensagres.xdocreport.converter.odt.odfdom-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFgBngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="fr.opensagres.xdocreport.document-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFgRngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="fr.opensagres.xdocreport.template-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFghngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="fr.opensagres.xdocreport.itext.extension-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFgxngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="fr.opensagres.xdocreport.document.docx-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFhBngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="velocity-1.7.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFhRngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="fr.opensagres.xdocreport.core-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFhhngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="fr.opensagres.xdocreport.document.odt-1.0.5.jar" type="CONNECTOR"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHFhxngEemBtMMqTz0rcw" id="DATA_TYPES"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHFiBngEemBtMMqTz0rcw" id="GROOVY_SCRIPT"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHFiRngEemBtMMqTz0rcw" id="OTHER"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHFihngEemBtMMqTz0rcw" id="DATA_TYPES"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHFixngEemBtMMqTz0rcw" id="GROOVY_SCRIPT"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHFjBngEemBtMMqTz0rcw" id="VALIDATOR"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHFjRngEemBtMMqTz0rcw" id="OTHER"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_MBHFjhngEemBtMMqTz0rcw" name="directAccess" typeClassname="java.lang.Boolean"/>
      </configurations>
      <configurations xmi:type="configuration:Configuration" xmi:id="_MBHFjxngEemBtMMqTz0rcw" name="bonitasoft" version="7.6.0-002" username="walter.bates" password="bpm">
        <actorMappings xmi:type="actormapping:ActorMappingsType" xmi:id="_MBHFkBngEemBtMMqTz0rcw">
          <actorMapping xmi:type="actormapping:ActorMapping" xmi:id="_MBHFkRngEemBtMMqTz0rcw" name="Lead Safety Physician">
            <groups xmi:type="actormapping:Groups" xmi:id="_MBHFkhngEemBtMMqTz0rcw"/>
            <memberships xmi:type="actormapping:Membership" xmi:id="_MBHFkxngEemBtMMqTz0rcw"/>
            <roles xmi:type="actormapping:Roles" xmi:id="_MBHFlBngEemBtMMqTz0rcw">
              <role>member</role>
            </roles>
            <users xmi:type="actormapping:Users" xmi:id="_MBHFlRngEemBtMMqTz0rcw"/>
          </actorMapping>
        </actorMappings>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_MBHFlhngEemBtMMqTz0rcw" type="CONNECTOR" definitionId="document-templating" definitionVersion="1.0.1" implementationId="document-templating-impl" implementationVersion="1.0.1"/>
        <definitionMappings xmi:type="configuration:DefinitionMapping" xmi:id="_MBHFlxngEemBtMMqTz0rcw" type="CONNECTOR" definitionId="loadDocumentFromDisk" definitionVersion="1.0.0" implementationId="loadDocumentFromDisk-impl" implementationVersion="1.0.0"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHFmBngEemBtMMqTz0rcw" id="ACTOR_FILTER"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHFmRngEemBtMMqTz0rcw" id="CONNECTOR">
          <children xmi:type="configuration:FragmentContainer" xmi:id="_MBHFmhngEemBtMMqTz0rcw" id="document-templating-impl-1.0.1">
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFmxngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="bonita-connector-document-templating-impl-1.0.1.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFnBngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="oro-2.0.8.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFnRngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="itext-2.1.7.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFnhngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="fr.opensagres.xdocreport.template.velocity-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFnxngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="org.odftoolkit.odfdom.converter.xhtml-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFoBngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="fr.opensagres.xdocreport.converter-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFoRngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="commons-lang-2.4.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFohngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="org.odftoolkit.odfdom.converter.pdf-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFoxngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="xercesImpl-2.9.1.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFpBngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="org.odftoolkit.odfdom.converter.core-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFpRngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="odfdom-java-0.8.7.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFphngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="fr.opensagres.xdocreport.converter.odt.odfdom-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFpxngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="fr.opensagres.xdocreport.document-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFqBngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="fr.opensagres.xdocreport.template-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFqRngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="fr.opensagres.xdocreport.itext.extension-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFqhngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="fr.opensagres.xdocreport.document.docx-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFqxngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="velocity-1.7.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFrBngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="fr.opensagres.xdocreport.core-1.0.5.jar" type="CONNECTOR"/>
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFrRngEemBtMMqTz0rcw" key="document-templating-impl -- 1.0.1" value="fr.opensagres.xdocreport.document.odt-1.0.5.jar" type="CONNECTOR"/>
          </children>
          <children xmi:type="configuration:FragmentContainer" xmi:id="_MBHFrhngEemBtMMqTz0rcw" id="loadDocumentFromDisk-impl-1.0.0">
            <fragments xmi:type="configuration:Fragment" xmi:id="_MBHFrxngEemBtMMqTz0rcw" key="loadDocumentFromDisk-impl -- 1.0.0" value="loadDocumentFromDisk-impl-1.0.0.jar" type="CONNECTOR"/>
          </children>
        </processDependencies>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHFsBngEemBtMMqTz0rcw" id="DATA_TYPES"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHFsRngEemBtMMqTz0rcw" id="GROOVY_SCRIPT"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHFshngEemBtMMqTz0rcw" id="OTHER"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHFsxngEemBtMMqTz0rcw" id="DATA_TYPES"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHFtBngEemBtMMqTz0rcw" id="GROOVY_SCRIPT"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHFtRngEemBtMMqTz0rcw" id="VALIDATOR"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHFthngEemBtMMqTz0rcw" id="OTHER"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_MBHFtxngEemBtMMqTz0rcw" name="directAccess" value="false" typeClassname="java.lang.Boolean"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_MBHFuBngEemBtMMqTz0rcw" name="pathTemplateDocument" value="D:\pym\Google Drive\consulting\20181207 CommonWealth\templateDocument" typeClassname="java.lang.String" description="If the path is set, then the template document may be read in this directory"/>
        <parameters xmi:type="parameter:Parameter" xmi:id="_MBHFuRngEemBtMMqTz0rcw" name="listValues" value="{&quot;reviewPriority&quot;:[{&quot;label&quot;:&quot;High&quot;,&quot;key&quot;:&quot;HIGH&quot;},{&quot;label&quot;:&quot;Medium&quot;,&quot;key&quot;:&quot;MED&quot;},{&quot;label&quot;:&quot;Low&quot;,&quot;key&quot;:&quot;LOW&quot;},{&quot;label&quot;:&quot;Not Defined&quot;,&quot;key&quot;:&quot;UND&quot;}],&quot;category&quot;:[{&quot;label&quot;:&quot;Important Identified Risk&quot;,&quot;key&quot;:&quot;IDENTIFIED_RISK_IMPORTANT&quot;},{&quot;label&quot;:&quot;Important Potential Risk&quot;,&quot;key&quot;:&quot;POTENTIAL_RISK_IMPORTANT&quot;},{&quot;label&quot;:&quot;Identified Risk not categorized as important&quot;,&quot;key&quot;:&quot;IDENTIFIED_RISK_NOT_IMPORTANT&quot;},{&quot;label&quot;:&quot;Potential Risk not categorized as important&quot;,&quot;key&quot;:&quot;POTENTIAL_RISK_NOT_IMPORTANT&quot;},{&quot;label&quot;:&quot;Missing Information&quot;,&quot;key&quot;:&quot;MISSING_INFORMATION&quot;},{&quot;label&quot;:&quot;Standard Safety Topic&quot;,&quot;key&quot;:&quot;STANDARD_SAFETY_TOPIC&quot;},{&quot;label&quot;:&quot;Validated Signal&quot;,&quot;key&quot;:&quot;VALIDATED_SIGNAL&quot;},{&quot;label&quot;:&quot;Health Authority Request&quot;,&quot;key&quot;:&quot;HEALTH_AUTHORITY_REQUEST&quot;},{&quot;label&quot;:&quot;Historic Identified Risk&quot;,&quot;key&quot;:&quot;HISTORIC_IDENTIFIED_RISK&quot;},{&quot;label&quot;:&quot;Historic Potential Risk&quot;,&quot;key&quot;:&quot;HISTORIC_POTENTIAL_RISK&quot;},{&quot;label&quot;:&quot;Safety Observation undergoing evaluation&quot;,&quot;key&quot;:&quot;SAFETY_OBSERVATION_EVALUATION&quot;},{&quot;label&quot;:&quot;Safety Observation&quot;,&quot;key&quot;:&quot;SAFETY_OBSERVATION&quot;}],&quot;keyRisk&quot;:[{&quot;label&quot;:&quot;Yes&quot;,&quot;key&quot;:&quot;YES&quot;},{&quot;label&quot;:&quot;No&quot;,&quot;key&quot;:&quot;NO&quot;},{&quot;label&quot;:&quot;Under Evaluation&quot;,&quot;key&quot;:&quot;EVALUATION&quot;}],&quot;origin&quot;:[{&quot;label&quot;:&quot;Preclinical Safety&quot;,&quot;key&quot;:&quot;PRECLINICAL_SAFETY&quot;},{&quot;label&quot;:&quot;Clinical Studies&quot;,&quot;key&quot;:&quot;CLINICAL_STUDIES&quot;},{&quot;label&quot;:&quot;Epidemiology Studies&quot;,&quot;key&quot;:&quot;EPIDEMIOLOGY_STUDY&quot;},{&quot;label&quot;:&quot;Literature&quot;,&quot;key&quot;:&quot;LITERATURE&quot;},{&quot;label&quot;:&quot;Health Authority&quot;,&quot;key&quot;:&quot;HEALTH_AUTHORITY&quot;},{&quot;label&quot;:&quot;Other Company / Compound (class-effect)&quot;,&quot;key&quot;:&quot;OTHER_COMPANY&quot;},{&quot;label&quot;:&quot;Argus Safety Database &quot;,&quot;key&quot;:&quot;ARGUS_SAFETY_DATABASE&quot;},{&quot;label&quot;:&quot;External Safety Database&quot;,&quot;key&quot;:&quot;EXTERNAL_SAFETY_DATABASE&quot;},{&quot;label&quot;:&quot;Standard (no specific origin)&quot;,&quot;key&quot;:&quot;STANDARD&quot;}]}" typeClassname="java.lang.String"/>
      </configurations>
      <parameters xmi:type="parameter:Parameter" xmi:id="_MBHFuhngEemBtMMqTz0rcw" name="directAccess" typeClassname="java.lang.Boolean"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_MBHFuxngEemBtMMqTz0rcw" name="pathTemplateDocument" typeClassname="java.lang.String" description="If the path is set, then the template document may be read in this directory"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_MBHFvBngEemBtMMqTz0rcw" name="listValues" typeClassname="java.lang.String"/>
      <contract xmi:type="process:Contract" xmi:id="_MBHFvRngEemBtMMqTz0rcw">
        <inputs xmi:type="process:ContractInput" xmi:id="_MBHFvhngEemBtMMqTz0rcw" name="smtMeetingInput" type="COMPLEX">
          <inputs xmi:type="process:ContractInput" xmi:id="_MBHFvxngEemBtMMqTz0rcw" name="date_of_meeting" type="OFFSETDATETIME"/>
          <inputs xmi:type="process:ContractInput" xmi:id="_MBHFwBngEemBtMMqTz0rcw" name="meeting_members" type="COMPLEX" multiple="true">
            <inputs xmi:type="process:ContractInput" xmi:id="_MBHFwRngEemBtMMqTz0rcw" name="persistenceId" type="LONG"/>
            <inputs xmi:type="process:ContractInput" xmi:id="_MBHFwhngEemBtMMqTz0rcw" name="name">
              <mapping xmi:type="process:ContractInputMapping" xmi:id="_MBHFwxngEemBtMMqTz0rcw"/>
            </inputs>
            <inputs xmi:type="process:ContractInput" xmi:id="_MBHFxBngEemBtMMqTz0rcw" name="email">
              <mapping xmi:type="process:ContractInputMapping" xmi:id="_MBHFxRngEemBtMMqTz0rcw"/>
            </inputs>
            <inputs xmi:type="process:ContractInput" xmi:id="_MBHFxhngEemBtMMqTz0rcw" name="is_present" type="BOOLEAN">
              <mapping xmi:type="process:ContractInputMapping" xmi:id="_MBHFxxngEemBtMMqTz0rcw"/>
            </inputs>
          </inputs>
          <inputs xmi:type="process:ContractInput" xmi:id="_MBHFyBngEemBtMMqTz0rcw" name="meeting_th_to" type="COMPLEX" multiple="true">
            <inputs xmi:type="process:ContractInput" xmi:id="_MBHFyRngEemBtMMqTz0rcw" name="therapy" type="COMPLEX">
              <mapping xmi:type="process:ContractInputMapping" xmi:id="_MBHFyhngEemBtMMqTz0rcw"/>
              <inputs xmi:type="process:ContractInput" xmi:id="_MBHFyxngEemBtMMqTz0rcw" name="persistenceId" type="LONG">
                <mapping xmi:type="process:ContractInputMapping" xmi:id="_MBHFzBngEemBtMMqTz0rcw"/>
              </inputs>
            </inputs>
          </inputs>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_MBHFzRngEemBtMMqTz0rcw" name="decisionInput">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_MBHFzhngEemBtMMqTz0rcw"/>
        </inputs>
        <inputs xmi:type="process:ContractInput" xmi:id="_MBHFzxngEemBtMMqTz0rcw" name="preparationDocumentsInput" type="COMPLEX" multiple="true">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_MBHF0BngEemBtMMqTz0rcw"/>
          <inputs xmi:type="process:ContractInput" xmi:id="_MBHF0RngEemBtMMqTz0rcw" name="setdoc" type="FILE">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_MBHF0hngEemBtMMqTz0rcw"/>
          </inputs>
        </inputs>
      </contract>
      <documents xmi:type="process:Document" xmi:id="_MBHF0xngEemBtMMqTz0rcw" name="minutesTemplate" defaultValueIdOfDocumentStore="Draft_SMT meeting minutes_template.docx" documentType="INTERNAL">
        <mimeType xmi:type="expression:Expression" xmi:id="_MBHF1BngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
        <url xmi:type="expression:Expression" xmi:id="_MBHF1RngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
        <initialMultipleContent xmi:type="expression:Expression" xmi:id="_MBHF1hngEemBtMMqTz0rcw" name="" content="" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List" returnTypeFixed="true"/>
      </documents>
      <documents xmi:type="process:Document" xmi:id="_MBHF1xngEemBtMMqTz0rcw" name="handoutTemplate" defaultValueIdOfDocumentStore="Draft_SMT meeting handout_template.docx" documentType="INTERNAL">
        <mimeType xmi:type="expression:Expression" xmi:id="_MBHF2BngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
        <url xmi:type="expression:Expression" xmi:id="_MBHF2RngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
        <initialMultipleContent xmi:type="expression:Expression" xmi:id="_MBHF2hngEemBtMMqTz0rcw" name="" content="" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List" returnTypeFixed="true"/>
      </documents>
      <documents xmi:type="process:Document" xmi:id="_MBHF2xngEemBtMMqTz0rcw" name="agendaTemplate" defaultValueIdOfDocumentStore="Draft_SMT meeting agenda_template.docx" documentType="INTERNAL">
        <mimeType xmi:type="expression:Expression" xmi:id="_MBHF3BngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
        <url xmi:type="expression:Expression" xmi:id="_MBHF3RngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
        <initialMultipleContent xmi:type="expression:Expression" xmi:id="_MBHF3hngEemBtMMqTz0rcw" name="" content="" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List" returnTypeFixed="true"/>
      </documents>
      <documents xmi:type="process:Document" xmi:id="_MBHF3xngEemBtMMqTz0rcw" name="minutes" multiple="true">
        <mimeType xmi:type="expression:Expression" xmi:id="_MBHF4BngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
        <url xmi:type="expression:Expression" xmi:id="_MBHF4RngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
        <initialMultipleContent xmi:type="expression:Expression" xmi:id="_MBHF4hngEemBtMMqTz0rcw" name="" content="" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List" returnTypeFixed="true"/>
      </documents>
      <documents xmi:type="process:Document" xmi:id="_MBHF4xngEemBtMMqTz0rcw" name="agenda">
        <mimeType xmi:type="expression:Expression" xmi:id="_MBHF5BngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
        <url xmi:type="expression:Expression" xmi:id="_MBHF5RngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
        <initialMultipleContent xmi:type="expression:Expression" xmi:id="_MBHF5hngEemBtMMqTz0rcw" name="" content="" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List" returnTypeFixed="true"/>
      </documents>
      <documents xmi:type="process:Document" xmi:id="_MBHF5xngEemBtMMqTz0rcw" name="handout">
        <mimeType xmi:type="expression:Expression" xmi:id="_MBHF6BngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
        <url xmi:type="expression:Expression" xmi:id="_MBHF6RngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
        <initialMultipleContent xmi:type="expression:Expression" xmi:id="_MBHF6hngEemBtMMqTz0rcw" name="" content="" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List" returnTypeFixed="true"/>
      </documents>
      <documents xmi:type="process:Document" xmi:id="_MBHF6xngEemBtMMqTz0rcw" name="eSignedMinutes" multiple="true">
        <mimeType xmi:type="expression:Expression" xmi:id="_MBHF7BngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
        <url xmi:type="expression:Expression" xmi:id="_MBHF7RngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
        <initialMultipleContent xmi:type="expression:Expression" xmi:id="_MBHF7hngEemBtMMqTz0rcw" name="" content="" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List" returnTypeFixed="true"/>
      </documents>
      <documents xmi:type="process:Document" xmi:id="_MBHF7xngEemBtMMqTz0rcw" name="preparationDocuments" documentType="INTERNAL" multiple="true">
        <mimeType xmi:type="expression:Expression" xmi:id="_MBHF8BngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
        <url xmi:type="expression:Expression" xmi:id="_MBHF8RngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
        <initialMultipleContent xmi:type="expression:Expression" xmi:id="_MBHF8hngEemBtMMqTz0rcw" name="getDocuments" content="&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;import java.util.logging.Logger;&#xD;&#xA;&#xD;&#xA;import org.bonitasoft.engine.bpm.document.DocumentValue&#xD;&#xA;&#xD;&#xA;List&lt;DocumentValue> listResult= new ArrayList&lt;DocumentValue>();&#xD;&#xA; &#xD;&#xA;Logger logger = Logger.getLogger(&quot;org.bonitasoft&quot;);&#xD;&#xA;&#xD;&#xA;for (int i=0; i&lt;preparationDocumentsInput.size();i++)&#xD;&#xA;{&#xD;&#xA;&#x9;if (preparationDocumentsInput.get( i )== null) {&#xD;&#xA;&#x9;&#x9; continue; // should never arrive&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;if (preparationDocumentsInput.get( i ).get(&quot;setdoc&quot;) !=null)&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;def newFileDocumentInput = preparationDocumentsInput.get( i ).get(&quot;setdoc&quot;)&#xD;&#xA;&#x9;&#x9;// we have a new content&#xD;&#xA;&#x9;&#x9;logger.info(&quot;preparationDocument: Line [&quot;+i+&quot;] getFileName[&quot;+newFileDocumentInput.getFileName()+&quot;] class [&quot;+newFileDocumentInput.getClass().getName()+&quot;]&quot;)&#xD;&#xA;&#x9;&#x9;listResult.add( new DocumentValue( newFileDocumentInput.getContent(), newFileDocumentInput.getContentType(), newFileDocumentInput.getFileName()));&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;} else if (preparationDocumentsInput.get( i ).get(&quot;src&quot;) !=null)&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;if (preparationDocumentsInput.get( i ).get(&quot;src&quot;).get(&quot;id&quot;) !=null)&#xD;&#xA;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;// we want to keep the current document in this position&#xD;&#xA;&#x9;&#x9;&#x9;logger.info(&quot;preparationDocument: Line [&quot;+i+&quot;] Keep Document [&quot;+preparationDocumentsInput.get( i ).get(&quot;src&quot;).get(&quot;id&quot;)+&quot;]&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;listResult.add( new DocumentValue( preparationDocumentsInput.get( i ).get(&quot;src&quot;).get(&quot;id&quot;) ) );&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;else if (preparationDocumentsInput.get( i ).get(&quot;src&quot;).get(&quot;url&quot;) !=null)&#xD;&#xA;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;logger.info(&quot;preparationDocument: Line [&quot;+i+&quot;] Url Document [&quot;+preparationDocumentsInput.get( i ).get(&quot;url&quot;)+&quot;]&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;listResult.add( new DocumentValue( (String) preparationDocumentsInput.get( i ).get(&quot;src&quot;).get(&quot;url&quot;) ));&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;{ &#x9;&#x9;&#x9;// user give an empty line, just ignore it&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;// user give an empty line, just ignore it&#xD;&#xA;&#x9;}&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return listResult;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.List" returnTypeFixed="true">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_MBHF8xngEemBtMMqTz0rcw" name="preparationDocumentsInput" type="COMPLEX" multiple="true">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_MBHF9BngEemBtMMqTz0rcw"/>
          </referencedElements>
        </initialMultipleContent>
      </documents>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_MBHF9RngEemBtMMqTz0rcw">
        <name xmi:type="expression:Expression" xmi:id="_MBHF9hngEemBtMMqTz0rcw" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_MBHF9xngEemBtMMqTz0rcw" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_MBHF-BngEemBtMMqTz0rcw">
        <name xmi:type="expression:Expression" xmi:id="_MBHF-RngEemBtMMqTz0rcw" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_MBHF-hngEemBtMMqTz0rcw" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_MBHF-xngEemBtMMqTz0rcw">
        <name xmi:type="expression:Expression" xmi:id="_MBHF_BngEemBtMMqTz0rcw" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_MBHF_RngEemBtMMqTz0rcw" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_MBHF_hngEemBtMMqTz0rcw">
        <name xmi:type="expression:Expression" xmi:id="_MBHF_xngEemBtMMqTz0rcw" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_MBHGABngEemBtMMqTz0rcw" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_MBHGARngEemBtMMqTz0rcw">
        <name xmi:type="expression:Expression" xmi:id="_MBHGAhngEemBtMMqTz0rcw" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_MBHGAxngEemBtMMqTz0rcw" content="" returnTypeFixed="true"/>
      </searchIndexes>
    </elements>
    <elements xmi:type="process:Pool" xmi:id="_MBHGBBngEemBtMMqTz0rcw" name="therapy">
      <elements xmi:type="process:StartEvent" xmi:id="_MBHGBRngEemBtMMqTz0rcw" name="Start3" outgoing="_MBHGKRngEemBtMMqTz0rcw">
        <viewPageFlowRedirectionURL xmi:type="expression:Expression" xmi:id="_MBHGBhngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
        <dynamicLabel xmi:type="expression:Expression" xmi:id="_MBHGBxngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
        <dynamicDescription xmi:type="expression:Expression" xmi:id="_MBHGCBngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
        <stepSummary xmi:type="expression:Expression" xmi:id="_MBHGCRngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
      </elements>
      <elements xmi:type="process:EndEvent" xmi:id="_MBHGChngEemBtMMqTz0rcw" name="End3" incoming="_MBHGLBngEemBtMMqTz0rcw">
        <viewPageFlowRedirectionURL xmi:type="expression:Expression" xmi:id="_MBHGCxngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
        <dynamicLabel xmi:type="expression:Expression" xmi:id="_MBHGDBngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
        <dynamicDescription xmi:type="expression:Expression" xmi:id="_MBHGDRngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
        <stepSummary xmi:type="expression:Expression" xmi:id="_MBHGDhngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
      </elements>
      <elements xmi:type="process:ServiceTask" xmi:id="_MBHGDxngEemBtMMqTz0rcw" name="Verify" outgoing="_MBHGLBngEemBtMMqTz0rcw" incoming="_MBHGKRngEemBtMMqTz0rcw">
        <viewPageFlowRedirectionURL xmi:type="expression:Expression" xmi:id="_MBHGEBngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
        <dynamicLabel xmi:type="expression:Expression" xmi:id="_MBHGERngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
        <dynamicDescription xmi:type="expression:Expression" xmi:id="_MBHGEhngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
        <stepSummary xmi:type="expression:Expression" xmi:id="_MBHGExngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
        <loopCondition xmi:type="expression:Expression" xmi:id="_MBHGFBngEemBtMMqTz0rcw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        <loopMaximum xmi:type="expression:Expression" xmi:id="_MBHGFRngEemBtMMqTz0rcw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
        <cardinalityExpression xmi:type="expression:Expression" xmi:id="_MBHGFhngEemBtMMqTz0rcw" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
        <iteratorExpression xmi:type="expression:Expression" xmi:id="_MBHGFxngEemBtMMqTz0rcw" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
        <completionCondition xmi:type="expression:Expression" xmi:id="_MBHGGBngEemBtMMqTz0rcw" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </elements>
      <mandatorySymbol xmi:type="expression:Expression" xmi:id="_MBHGGRngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
      <mandatoryLabel xmi:type="expression:Expression" xmi:id="_MBHGGhngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
      <data xmi:type="process:BusinessObjectData" xmi:id="_MBHGGxngEemBtMMqTz0rcw" name="therapy" dataType="_MBHGdBngEemBtMMqTz0rcw" className="com.company.model.Therapy">
        <defaultValue xmi:type="expression:Expression" xmi:id="_MBHGHBngEemBtMMqTz0rcw" name="initTherapy()" content="import java.util.logging.Logger&#xD;&#xA;&#xD;&#xA;import org.bonitasoft.engine.identity.User&#xD;&#xA;&#xD;&#xA;Logger logger = Logger.getLogger(&quot;org.bonitasoft.therapy&quot;);&#xD;&#xA;&#xD;&#xA;def therapyVar = new com.company.model.Therapy()&#xD;&#xA;therapyVar.members = {&#xD;&#xA;&#x9;def smtMemberList = []&#xD;&#xA;&#x9;//For each item collected in multiple input&#xD;&#xA;&#x9;therapyInput.members.each{&#xD;&#xA;&#x9;&#x9;//Add aggregated SmtMember instance&#xD;&#xA;&#x9;&#x9;smtMemberList.add({ currentSmtMemberInput ->&#xD;&#xA;&#x9;&#x9;&#x9;def smtMemberVar = smtMemberDAO.findByName(currentSmtMemberInput.name);&#xD;&#xA;&#x9;&#x9;&#x9;if (smtMemberVar == null)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;smtMemberVar = smtMemberDAO.newInstance( currentSmtMemberInput.name );&#xD;&#xA;&#x9;&#x9;&#x9;smtMemberVar.name = currentSmtMemberInput.name&#xD;&#xA;&#x9;&#x9;&#x9;smtMemberVar.email = currentSmtMemberInput.email&#xD;&#xA;&#x9;&#x9;&#x9;smtMemberVar.role_type = currentSmtMemberInput.role_type&#xD;&#xA;&#x9;&#x9;&#x9;try&#xD;&#xA;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;User user = apiAccessor.getIdentityAPI().getUserByUserName(currentSmtMemberInput.name);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;smtMemberVar.role_member = user.getJobTitle();&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;catch(Exception e)&#xD;&#xA;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;logger.info(&quot;User [&quot;+currentSmtMemberInput.name+&quot;] not found, can't get its role&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;return smtMemberVar&#xD;&#xA;&#x9;&#x9;}(it))&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;return smtMemberList}()&#xD;&#xA;therapyVar.name = therapyInput.name&#xD;&#xA;therapyVar.topics = {&#xD;&#xA;&#x9;def safetyTopicList = []&#xD;&#xA;&#x9;//For each item collected in multiple input&#xD;&#xA;&#x9;therapyInput.topics.each{&#xD;&#xA;&#x9;&#x9;//Add aggregated SafetyTopic instance&#xD;&#xA;&#x9;&#x9;safetyTopicList.add({ currentSafetyTopicInput ->&#xD;&#xA;&#x9;&#x9;&#x9;def safetyTopicVar = safetyTopicDAO.findByName(currentSafetyTopicInput.name);&#xD;&#xA;&#x9;&#x9;&#x9;if (safetyTopicVar==null)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;safetyTopicVar = safetyTopicDAO.newInstance( currentSafetyTopicInput.name );&#xD;&#xA;&#x9;&#x9;&#x9;safetyTopicVar.name = currentSafetyTopicInput.name&#xD;&#xA;&#x9;&#x9;&#x9;safetyTopicVar.review_priority = currentSafetyTopicInput.review_priority&#xD;&#xA;&#x9;&#x9;&#x9;safetyTopicVar.category = currentSafetyTopicInput.category&#xD;&#xA;&#x9;&#x9;&#x9;safetyTopicVar.key_risk = currentSafetyTopicInput.key_risk&#xD;&#xA;&#x9;&#x9;&#x9;safetyTopicVar.origin = currentSafetyTopicInput.origin&#xD;&#xA;&#x9;&#x9;&#x9;return safetyTopicVar&#xD;&#xA;&#x9;&#x9;}(it))&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;return safetyTopicList}()&#xD;&#xA;return therapyVar" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="com.company.model.Therapy">
          <referencedElements xmi:type="expression:Expression" xmi:id="_MBHGHRngEemBtMMqTz0rcw" name="safetyTopicDAO" content="safetyTopicDAO" type="TYPE_BUSINESS_OBJECT_DAO" returnType="com.company.model.SafetyTopicDAO" returnTypeFixed="true"/>
          <referencedElements xmi:type="expression:Expression" xmi:id="_MBHGHhngEemBtMMqTz0rcw" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
          <referencedElements xmi:type="process:ContractInput" xmi:id="_MBHGHxngEemBtMMqTz0rcw" name="therapyInput" type="COMPLEX"/>
          <referencedElements xmi:type="expression:Expression" xmi:id="_MBHGIBngEemBtMMqTz0rcw" name="smtMemberDAO" content="smtMemberDAO" type="TYPE_BUSINESS_OBJECT_DAO" returnType="com.company.model.SmtMemberDAO" returnTypeFixed="true"/>
        </defaultValue>
      </data>
      <entryRedirectionURL xmi:type="expression:Expression" xmi:id="_MBHGIRngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
      <confirmationMessage xmi:type="expression:Expression" xmi:id="_MBHGIhngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
      <formMapping xmi:type="process:FormMapping" xmi:id="_MBHGIxngEemBtMMqTz0rcw">
        <targetForm xmi:type="expression:Expression" xmi:id="_MBHGJBngEemBtMMqTz0rcw" name="TherapyForm" content="56b324eb-bd02-4b49-a402-ba5cce24b8c3" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
      </formMapping>
      <recapPageFlowRedirectionURL xmi:type="expression:Expression" xmi:id="_MBHGJRngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
      <overviewFormMapping xmi:type="process:FormMapping" xmi:id="_MBHGJhngEemBtMMqTz0rcw">
        <targetForm xmi:type="expression:Expression" xmi:id="_MBHGJxngEemBtMMqTz0rcw" content="" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
      </overviewFormMapping>
      <viewPageFlowRedirectionURL xmi:type="expression:Expression" xmi:id="_MBHGKBngEemBtMMqTz0rcw" name="" content="" returnTypeFixed="true"/>
      <connections xmi:type="process:SequenceFlow" xmi:id="_MBHGKRngEemBtMMqTz0rcw" target="_MBHGDxngEemBtMMqTz0rcw" source="_MBHGBRngEemBtMMqTz0rcw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_MBHGKhngEemBtMMqTz0rcw"/>
        <condition xmi:type="expression:Expression" xmi:id="_MBHGKxngEemBtMMqTz0rcw" name="" type="TYPE_CONDITION" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_MBHGLBngEemBtMMqTz0rcw" target="_MBHGChngEemBtMMqTz0rcw" source="_MBHGDxngEemBtMMqTz0rcw">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_MBHGLRngEemBtMMqTz0rcw"/>
        <condition xmi:type="expression:Expression" xmi:id="_MBHGLhngEemBtMMqTz0rcw" name="" type="TYPE_CONDITION" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <actors xmi:type="process:Actor" xmi:id="_MBHGLxngEemBtMMqTz0rcw" name="therapyManager" initiator="true"/>
      <configurations xmi:type="configuration:Configuration" xmi:id="_MBHGMBngEemBtMMqTz0rcw" name="bonitasoft" version="7.6.0-002" username="walter.bates" password="bpm">
        <actorMappings xmi:type="actormapping:ActorMappingsType" xmi:id="_MBHGMRngEemBtMMqTz0rcw">
          <actorMapping xmi:type="actormapping:ActorMapping" xmi:id="_MBHGMhngEemBtMMqTz0rcw" name="therapyManager">
            <groups xmi:type="actormapping:Groups" xmi:id="_MBHGMxngEemBtMMqTz0rcw"/>
            <memberships xmi:type="actormapping:Membership" xmi:id="_MBHGNBngEemBtMMqTz0rcw"/>
            <roles xmi:type="actormapping:Roles" xmi:id="_MBHGNRngEemBtMMqTz0rcw">
              <role>member</role>
            </roles>
            <users xmi:type="actormapping:Users" xmi:id="_MBHGNhngEemBtMMqTz0rcw"/>
          </actorMapping>
        </actorMappings>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHGNxngEemBtMMqTz0rcw" id="ACTOR_FILTER"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHGOBngEemBtMMqTz0rcw" id="CONNECTOR"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHGORngEemBtMMqTz0rcw" id="DATA_TYPES"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHGOhngEemBtMMqTz0rcw" id="GROOVY_SCRIPT"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHGOxngEemBtMMqTz0rcw" id="OTHER"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHGPBngEemBtMMqTz0rcw" id="DATA_TYPES"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHGPRngEemBtMMqTz0rcw" id="GROOVY_SCRIPT"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHGPhngEemBtMMqTz0rcw" id="VALIDATOR"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHGPxngEemBtMMqTz0rcw" id="OTHER"/>
      </configurations>
      <configurations xmi:type="configuration:Configuration" xmi:id="_MBHGQBngEemBtMMqTz0rcw" name="Qualification" version="7.6.0-002" username="walter.bates" password="bpm">
        <actorMappings xmi:type="actormapping:ActorMappingsType" xmi:id="_MBHGQRngEemBtMMqTz0rcw">
          <actorMapping xmi:type="actormapping:ActorMapping" xmi:id="_MBHGQhngEemBtMMqTz0rcw" name="therapyManager">
            <groups xmi:type="actormapping:Groups" xmi:id="_MBHGQxngEemBtMMqTz0rcw"/>
            <memberships xmi:type="actormapping:Membership" xmi:id="_MBHGRBngEemBtMMqTz0rcw"/>
            <roles xmi:type="actormapping:Roles" xmi:id="_MBHGRRngEemBtMMqTz0rcw"/>
            <users xmi:type="actormapping:Users" xmi:id="_MBHGRhngEemBtMMqTz0rcw"/>
          </actorMapping>
        </actorMappings>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHGRxngEemBtMMqTz0rcw" id="ACTOR_FILTER"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHGSBngEemBtMMqTz0rcw" id="CONNECTOR"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHGSRngEemBtMMqTz0rcw" id="DATA_TYPES"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHGShngEemBtMMqTz0rcw" id="GROOVY_SCRIPT"/>
        <processDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHGSxngEemBtMMqTz0rcw" id="OTHER"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHGTBngEemBtMMqTz0rcw" id="DATA_TYPES"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHGTRngEemBtMMqTz0rcw" id="GROOVY_SCRIPT"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHGThngEemBtMMqTz0rcw" id="VALIDATOR"/>
        <applicationDependencies xmi:type="configuration:FragmentContainer" xmi:id="_MBHGTxngEemBtMMqTz0rcw" id="OTHER"/>
      </configurations>
      <contract xmi:type="process:Contract" xmi:id="_MBHGUBngEemBtMMqTz0rcw">
        <inputs xmi:type="process:ContractInput" xmi:id="_MBHGURngEemBtMMqTz0rcw" name="therapyInput" type="COMPLEX">
          <inputs xmi:type="process:ContractInput" xmi:id="_MBHGUhngEemBtMMqTz0rcw" name="members" type="COMPLEX" multiple="true">
            <inputs xmi:type="process:ContractInput" xmi:id="_MBHGUxngEemBtMMqTz0rcw" name="name"/>
            <inputs xmi:type="process:ContractInput" xmi:id="_MBHGVBngEemBtMMqTz0rcw" name="email"/>
          </inputs>
          <inputs xmi:type="process:ContractInput" xmi:id="_MBHGVRngEemBtMMqTz0rcw" name="name"/>
          <inputs xmi:type="process:ContractInput" xmi:id="_MBHGVhngEemBtMMqTz0rcw" name="topics" type="COMPLEX" multiple="true">
            <inputs xmi:type="process:ContractInput" xmi:id="_MBHGVxngEemBtMMqTz0rcw" name="name"/>
            <inputs xmi:type="process:ContractInput" xmi:id="_MBHGWBngEemBtMMqTz0rcw" name="review_priority"/>
            <inputs xmi:type="process:ContractInput" xmi:id="_MBHGWRngEemBtMMqTz0rcw" name="category"/>
            <inputs xmi:type="process:ContractInput" xmi:id="_MBHGWhngEemBtMMqTz0rcw" name="key_risk"/>
            <inputs xmi:type="process:ContractInput" xmi:id="_MBHGWxngEemBtMMqTz0rcw" name="origin">
              <mapping xmi:type="process:ContractInputMapping" xmi:id="_MBHGXBngEemBtMMqTz0rcw"/>
            </inputs>
          </inputs>
        </inputs>
      </contract>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_MBHGXRngEemBtMMqTz0rcw">
        <name xmi:type="expression:Expression" xmi:id="_MBHGXhngEemBtMMqTz0rcw" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_MBHGXxngEemBtMMqTz0rcw" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_MBHGYBngEemBtMMqTz0rcw">
        <name xmi:type="expression:Expression" xmi:id="_MBHGYRngEemBtMMqTz0rcw" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_MBHGYhngEemBtMMqTz0rcw" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_MBHGYxngEemBtMMqTz0rcw">
        <name xmi:type="expression:Expression" xmi:id="_MBHGZBngEemBtMMqTz0rcw" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_MBHGZRngEemBtMMqTz0rcw" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_MBHGZhngEemBtMMqTz0rcw">
        <name xmi:type="expression:Expression" xmi:id="_MBHGZxngEemBtMMqTz0rcw" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_MBHGaBngEemBtMMqTz0rcw" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_MBHGaRngEemBtMMqTz0rcw">
        <name xmi:type="expression:Expression" xmi:id="_MBHGahngEemBtMMqTz0rcw" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_MBHGaxngEemBtMMqTz0rcw" content="" returnTypeFixed="true"/>
      </searchIndexes>
    </elements>
    <datatypes xmi:type="process:BooleanType" xmi:id="_MBHGbBngEemBtMMqTz0rcw" name="Boolean"/>
    <datatypes xmi:type="process:DateType" xmi:id="_MBHGbRngEemBtMMqTz0rcw" name="Date"/>
    <datatypes xmi:type="process:IntegerType" xmi:id="_MBHGbhngEemBtMMqTz0rcw" name="Integer"/>
    <datatypes xmi:type="process:LongType" xmi:id="_MBHGbxngEemBtMMqTz0rcw" name="Long"/>
    <datatypes xmi:type="process:DoubleType" xmi:id="_MBHGcBngEemBtMMqTz0rcw" name="Double"/>
    <datatypes xmi:type="process:StringType" xmi:id="_MBHGcRngEemBtMMqTz0rcw" name="Text"/>
    <datatypes xmi:type="process:JavaType" xmi:id="_MBHGchngEemBtMMqTz0rcw" name="Java_object"/>
    <datatypes xmi:type="process:XMLType" xmi:id="_MBHGcxngEemBtMMqTz0rcw" name="XML"/>
    <datatypes xmi:type="process:BusinessObjectType" xmi:id="_MBHGdBngEemBtMMqTz0rcw" name="Business_Object"/>
  </process:MainProcess>
  <notation:Diagram xmi:id="_MBHGdRngEemBtMMqTz0rcw" type="Process" element="_MBHDcBngEemBtMMqTz0rcw" name="MyDiagram2" measurementUnit="Pixel">
    <children xmi:type="notation:Node" xmi:id="_MBHGdhngEemBtMMqTz0rcw" type="2007" element="_MBHDcRngEemBtMMqTz0rcw">
      <children xmi:type="notation:DecorationNode" xmi:id="_MBHGdxngEemBtMMqTz0rcw" type="5008"/>
      <children xmi:type="notation:DecorationNode" xmi:id="_MBHGeBngEemBtMMqTz0rcw" type="7001">
        <children xmi:type="notation:Node" xmi:id="_MBHGeRngEemBtMMqTz0rcw" type="3007" element="_MBHDchngEemBtMMqTz0rcw">
          <children xmi:type="notation:DecorationNode" xmi:id="_MBHGehngEemBtMMqTz0rcw" type="5007"/>
          <children xmi:type="notation:DecorationNode" xmi:id="_MBHGexngEemBtMMqTz0rcw" type="7002">
            <children xmi:type="notation:Shape" xmi:id="_MBHGfBngEemBtMMqTz0rcw" type="3005" element="_MBHDeBngEemBtMMqTz0rcw" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_MBHGfRngEemBtMMqTz0rcw" type="5005"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_MBHGfhngEemBtMMqTz0rcw" x="160" y="60" width="123" height="61"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_MBHGfxngEemBtMMqTz0rcw" type="3002" element="_MBHDcxngEemBtMMqTz0rcw" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_MBHGgBngEemBtMMqTz0rcw" type="5024">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_MBHGgRngEemBtMMqTz0rcw" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_MBHGghngEemBtMMqTz0rcw" x="50" y="68"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_MBHGgxngEemBtMMqTz0rcw" type="3008" element="_MBHDthngEemBtMMqTz0rcw" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_MBHGhBngEemBtMMqTz0rcw" type="5026">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_MBHGhRngEemBtMMqTz0rcw" x="39" y="-50"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_MBHGhhngEemBtMMqTz0rcw" x="518" y="55" width="43" height="43"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_MBHGhxngEemBtMMqTz0rcw" type="3005" element="_MBHDuxngEemBtMMqTz0rcw" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_MBHGiBngEemBtMMqTz0rcw" type="5005"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_MBHGiRngEemBtMMqTz0rcw" x="784" y="52" width="100" height="50"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_MBHGihngEemBtMMqTz0rcw" type="3027" element="_MBHD6BngEemBtMMqTz0rcw" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_MBHGixngEemBtMMqTz0rcw" type="5017"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_MBHGjBngEemBtMMqTz0rcw" x="1107" y="57"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_MBHGjRngEemBtMMqTz0rcw" type="3005" element="_MBHEExngEemBtMMqTz0rcw" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_MBHGjhngEemBtMMqTz0rcw" type="5005"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_MBHGjxngEemBtMMqTz0rcw" x="1256" y="52" width="120" height="60"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_MBHGkBngEemBtMMqTz0rcw" type="3003" element="_MBHEQxngEemBtMMqTz0rcw" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_MBHGkRngEemBtMMqTz0rcw" type="5025">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_MBHGkhngEemBtMMqTz0rcw" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_MBHGkxngEemBtMMqTz0rcw" x="1522" y="62"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_MBHGlBngEemBtMMqTz0rcw" type="3008" element="_MBHESBngEemBtMMqTz0rcw" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_MBHGlRngEemBtMMqTz0rcw" visible="false" type="5026">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_MBHGlhngEemBtMMqTz0rcw" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_MBHGlxngEemBtMMqTz0rcw" x="96" y="65"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_MBHGmBngEemBtMMqTz0rcw" type="3027" element="_MBHETRngEemBtMMqTz0rcw" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_MBHGmRngEemBtMMqTz0rcw" type="5017"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_MBHGmhngEemBtMMqTz0rcw" x="328" y="61" width="119" height="60"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_MBHGmxngEemBtMMqTz0rcw" type="3008" element="_MBHEpRngEemBtMMqTz0rcw" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_MBHGnBngEemBtMMqTz0rcw" type="5026">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_MBHGnRngEemBtMMqTz0rcw" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_MBHGnhngEemBtMMqTz0rcw" x="1419" y="50"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_MBHGnxngEemBtMMqTz0rcw" type="3027" element="_MBHEqhngEemBtMMqTz0rcw" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_MBHGoBngEemBtMMqTz0rcw" type="5017"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_MBHGoRngEemBtMMqTz0rcw" x="936" y="56"/>
            </children>
          </children>
          <styles xmi:type="notation:DescriptionStyle" xmi:id="_MBHGohngEemBtMMqTz0rcw"/>
          <styles xmi:type="notation:FontStyle" xmi:id="_MBHGoxngEemBtMMqTz0rcw" fontName="Segoe UI"/>
          <styles xmi:type="notation:LineStyle" xmi:id="_MBHGpBngEemBtMMqTz0rcw"/>
          <styles xmi:type="notation:FillStyle" xmi:id="_MBHGpRngEemBtMMqTz0rcw"/>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_MBHGphngEemBtMMqTz0rcw" x="45" y="10" width="1619" height="180"/>
        </children>
      </children>
      <styles xmi:type="notation:DescriptionStyle" xmi:id="_MBHGpxngEemBtMMqTz0rcw"/>
      <styles xmi:type="notation:FontStyle" xmi:id="_MBHGqBngEemBtMMqTz0rcw" fontName="Segoe UI"/>
      <styles xmi:type="notation:LineStyle" xmi:id="_MBHGqRngEemBtMMqTz0rcw"/>
      <styles xmi:type="notation:FillStyle" xmi:id="_MBHGqhngEemBtMMqTz0rcw"/>
      <layoutConstraint xmi:type="notation:Bounds" xmi:id="_MBHGqxngEemBtMMqTz0rcw" width="1680" height="250"/>
    </children>
    <children xmi:type="notation:Node" xmi:id="_MBHGrBngEemBtMMqTz0rcw" type="2007" element="_MBHGBBngEemBtMMqTz0rcw">
      <children xmi:type="notation:DecorationNode" xmi:id="_MBHGrRngEemBtMMqTz0rcw" type="5008"/>
      <children xmi:type="notation:DecorationNode" xmi:id="_MBHGrhngEemBtMMqTz0rcw" type="7001">
        <children xmi:type="notation:Shape" xmi:id="_MBHGrxngEemBtMMqTz0rcw" type="3002" element="_MBHGBRngEemBtMMqTz0rcw" fontName="Segoe UI">
          <children xmi:type="notation:DecorationNode" xmi:id="_MBHGsBngEemBtMMqTz0rcw" type="5024">
            <layoutConstraint xmi:type="notation:Location" xmi:id="_MBHGsRngEemBtMMqTz0rcw" y="5"/>
          </children>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_MBHGshngEemBtMMqTz0rcw" x="45" y="28"/>
        </children>
        <children xmi:type="notation:Shape" xmi:id="_MBHGsxngEemBtMMqTz0rcw" type="3003" element="_MBHGChngEemBtMMqTz0rcw" fontName="Segoe UI">
          <children xmi:type="notation:DecorationNode" xmi:id="_MBHGtBngEemBtMMqTz0rcw" type="5025">
            <layoutConstraint xmi:type="notation:Location" xmi:id="_MBHGtRngEemBtMMqTz0rcw" y="5"/>
          </children>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_MBHGthngEemBtMMqTz0rcw" x="331" y="38"/>
        </children>
        <children xmi:type="notation:Shape" xmi:id="_MBHGtxngEemBtMMqTz0rcw" type="3027" element="_MBHGDxngEemBtMMqTz0rcw" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
          <children xmi:type="notation:DecorationNode" xmi:id="_MBHGuBngEemBtMMqTz0rcw" type="5017"/>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_MBHGuRngEemBtMMqTz0rcw" x="122" y="28" width="100" height="50"/>
        </children>
      </children>
      <styles xmi:type="notation:DescriptionStyle" xmi:id="_MBHGuhngEemBtMMqTz0rcw"/>
      <styles xmi:type="notation:FontStyle" xmi:id="_MBHGuxngEemBtMMqTz0rcw" fontName="Segoe UI"/>
      <styles xmi:type="notation:LineStyle" xmi:id="_MBHGvBngEemBtMMqTz0rcw"/>
      <styles xmi:type="notation:FillStyle" xmi:id="_MBHGvRngEemBtMMqTz0rcw"/>
      <layoutConstraint xmi:type="notation:Bounds" xmi:id="_MBHGvhngEemBtMMqTz0rcw" width="1680" height="113"/>
    </children>
    <styles xmi:type="notation:DiagramStyle" xmi:id="_MBHGvxngEemBtMMqTz0rcw"/>
    <edges xmi:type="notation:Connector" xmi:id="_MBHGwBngEemBtMMqTz0rcw" type="4001" element="_MBHE4BngEemBtMMqTz0rcw" source="_MBHGfBngEemBtMMqTz0rcw" target="_MBHGmBngEemBtMMqTz0rcw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_MBHGwRngEemBtMMqTz0rcw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_MBHGwhngEemBtMMqTz0rcw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_MBHGwxngEemBtMMqTz0rcw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_MBHGxBngEemBtMMqTz0rcw" points="[62, -4, -57, -21]$[107, -4, -12, -21]"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_MBHGxRngEemBtMMqTz0rcw" id="(0.10273972602739725,0.7671232876712328)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_MBHGxhngEemBtMMqTz0rcw" type="4001" element="_MBHE4xngEemBtMMqTz0rcw" source="_MBHGgxngEemBtMMqTz0rcw" target="_MBHGfBngEemBtMMqTz0rcw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_MBHGxxngEemBtMMqTz0rcw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_MBHGyBngEemBtMMqTz0rcw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_MBHGyRngEemBtMMqTz0rcw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_MBHGyhngEemBtMMqTz0rcw" points="[-19, 12, 321, -12]$[-19, 77, 321, 53]$[-335, 77, 5, 53]$[-335, 38, 5, 14]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_MBHGyxngEemBtMMqTz0rcw" id="(1.0,0.6511627906976745)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_MBHGzBngEemBtMMqTz0rcw" id="(0.5,0.78)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_MBHGzRngEemBtMMqTz0rcw" type="4001" element="_MBHE5hngEemBtMMqTz0rcw" source="_MBHGgxngEemBtMMqTz0rcw" target="_MBHGhxngEemBtMMqTz0rcw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_MBHGzhngEemBtMMqTz0rcw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_MBHGzxngEemBtMMqTz0rcw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_MBHG0BngEemBtMMqTz0rcw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_MBHG0RngEemBtMMqTz0rcw" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_MBHG0hngEemBtMMqTz0rcw" id="(1.0,0.7674418604651163)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_MBHG0xngEemBtMMqTz0rcw" type="4001" element="_MBHE6hngEemBtMMqTz0rcw" source="_MBHGhxngEemBtMMqTz0rcw" target="_MBHGnxngEemBtMMqTz0rcw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_MBHG1BngEemBtMMqTz0rcw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_MBHG1RngEemBtMMqTz0rcw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_MBHG1hngEemBtMMqTz0rcw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_MBHG1xngEemBtMMqTz0rcw" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_MBHG2BngEemBtMMqTz0rcw" type="4001" element="_MBHE7RngEemBtMMqTz0rcw" source="_MBHGihngEemBtMMqTz0rcw" target="_MBHGjRngEemBtMMqTz0rcw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_MBHG2RngEemBtMMqTz0rcw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_MBHG2hngEemBtMMqTz0rcw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_MBHG2xngEemBtMMqTz0rcw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_MBHG3BngEemBtMMqTz0rcw" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_MBHG3RngEemBtMMqTz0rcw" type="4001" element="_MBHE8BngEemBtMMqTz0rcw" source="_MBHGfxngEemBtMMqTz0rcw" target="_MBHGlBngEemBtMMqTz0rcw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_MBHG3hngEemBtMMqTz0rcw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_MBHG3xngEemBtMMqTz0rcw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_MBHG4BngEemBtMMqTz0rcw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_MBHG4RngEemBtMMqTz0rcw" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_MBHG4hngEemBtMMqTz0rcw" id="(1.0,1.0)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_MBHG4xngEemBtMMqTz0rcw" type="4001" element="_MBHGKRngEemBtMMqTz0rcw" source="_MBHGrxngEemBtMMqTz0rcw" target="_MBHGtxngEemBtMMqTz0rcw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_MBHG5BngEemBtMMqTz0rcw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_MBHG5RngEemBtMMqTz0rcw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_MBHG5hngEemBtMMqTz0rcw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_MBHG5xngEemBtMMqTz0rcw" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_MBHG6BngEemBtMMqTz0rcw" type="4001" element="_MBHGLBngEemBtMMqTz0rcw" source="_MBHGtxngEemBtMMqTz0rcw" target="_MBHGsxngEemBtMMqTz0rcw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_MBHG6RngEemBtMMqTz0rcw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_MBHG6hngEemBtMMqTz0rcw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_MBHG6xngEemBtMMqTz0rcw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_MBHG7BngEemBtMMqTz0rcw" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_MBHG7RngEemBtMMqTz0rcw" type="4001" element="_MBHE8xngEemBtMMqTz0rcw" source="_MBHGlBngEemBtMMqTz0rcw" target="_MBHGmBngEemBtMMqTz0rcw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_MBHG7hngEemBtMMqTz0rcw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_MBHG7xngEemBtMMqTz0rcw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_MBHG8BngEemBtMMqTz0rcw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_MBHG8RngEemBtMMqTz0rcw" points="[21, -1, -267, -31]$[21, -40, -267, -70]$[270, -40, -18, -70]$[270, -25, -18, -55]"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_MBHG8hngEemBtMMqTz0rcw" id="(0.6470588235294118,0.9166666666666666)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_MBHG8xngEemBtMMqTz0rcw" type="4001" element="_MBHE9hngEemBtMMqTz0rcw" source="_MBHGlBngEemBtMMqTz0rcw" target="_MBHGnxngEemBtMMqTz0rcw" roundedBendpointsRadius="10" routing="Rectilinear" lineColor="65280">
      <children xmi:type="notation:DecorationNode" xmi:id="_MBHG9BngEemBtMMqTz0rcw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_MBHG9RngEemBtMMqTz0rcw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_MBHG9hngEemBtMMqTz0rcw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_MBHG9xngEemBtMMqTz0rcw" points="[-13, -22, -904, 13]$[-13, -88, -904, -53]$[846, -88, -45, -53]$[846, -39, -45, -4]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_MBHG-BngEemBtMMqTz0rcw" id="(1.0,0.6976744186046512)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_MBHG-RngEemBtMMqTz0rcw" id="(0.94,0.08)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_MBHG-hngEemBtMMqTz0rcw" type="4001" element="_MBHE-hngEemBtMMqTz0rcw" source="_MBHGmBngEemBtMMqTz0rcw" target="_MBHGgxngEemBtMMqTz0rcw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_MBHG-xngEemBtMMqTz0rcw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_MBHG_BngEemBtMMqTz0rcw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_MBHG_RngEemBtMMqTz0rcw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_MBHG_hngEemBtMMqTz0rcw" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_MBHG_xngEemBtMMqTz0rcw" type="4001" element="_MBHE_RngEemBtMMqTz0rcw" source="_MBHGjRngEemBtMMqTz0rcw" target="_MBHGmxngEemBtMMqTz0rcw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_MBHHABngEemBtMMqTz0rcw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_MBHHARngEemBtMMqTz0rcw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_MBHHAhngEemBtMMqTz0rcw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_MBHHAxngEemBtMMqTz0rcw" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_MBHHBBngEemBtMMqTz0rcw" id="(1.0,0.56)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_MBHHBRngEemBtMMqTz0rcw" type="4001" element="_MBHFABngEemBtMMqTz0rcw" source="_MBHGmxngEemBtMMqTz0rcw" target="_MBHGkBngEemBtMMqTz0rcw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_MBHHBhngEemBtMMqTz0rcw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_MBHHBxngEemBtMMqTz0rcw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_MBHHCBngEemBtMMqTz0rcw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_MBHHCRngEemBtMMqTz0rcw" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_MBHHChngEemBtMMqTz0rcw" type="4001" element="_MBHFAxngEemBtMMqTz0rcw" source="_MBHGmxngEemBtMMqTz0rcw" target="_MBHGjRngEemBtMMqTz0rcw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_MBHHCxngEemBtMMqTz0rcw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_MBHHDBngEemBtMMqTz0rcw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_MBHHDRngEemBtMMqTz0rcw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_MBHHDhngEemBtMMqTz0rcw" points="[-22, -27, 120, -8]$[-22, -50, 120, -31]$[-156, -50, -14, -31]$[-156, -25, -14, -6]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_MBHHDxngEemBtMMqTz0rcw" id="(1.0,0.627906976744186)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_MBHHEBngEemBtMMqTz0rcw" id="(0.64,0.12)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_MBHHERngEemBtMMqTz0rcw" type="4001" element="_MBHFBxngEemBtMMqTz0rcw" source="_MBHGnxngEemBtMMqTz0rcw" target="_MBHGihngEemBtMMqTz0rcw" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_MBHHEhngEemBtMMqTz0rcw" type="6001">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_MBHHExngEemBtMMqTz0rcw" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_MBHHFBngEemBtMMqTz0rcw" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_MBHHFRngEemBtMMqTz0rcw" points="[0, 0, 0, 0]$[0, 0, 0, 0]"/>
    </edges>
  </notation:Diagram>
</xmi:XMI>
